#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/m06-2x/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = dft.RKS(mol) 
    mf.grids.level = 4
    mf.xc = 'm06-2x'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Thu Jun 28 05:30:53 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 6
[INPUT] num. electrons = 18
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C     -2.861783000000   0.201760000000   0.032509000000 AA   -5.407986097936   0.381271142892   0.061433106583 Bohr
[INPUT]  2 C     -1.930144000000   1.181394000000  -0.001095000000 AA   -3.647443540973   2.232511105204  -0.002069250106 Bohr
[INPUT]  3 H     -3.948852000000   0.379424000000   0.033482000000 AA   -7.462248786441   0.717007445087   0.063271810103 Bohr
[INPUT]  4 H     -2.593985000000  -0.864570000000   0.062104000000 AA   -4.901921221230  -1.633800515515   0.117359551240 Bohr
[INPUT]  5 Li    -0.009553000000   0.790296000000   0.000015000000 AA   -0.018052553668   1.493442997339   0.000028345892 Bohr
[INPUT]  6 H     -2.398873000000   2.183826000000  -0.026894000000 AA   -4.533212977614   4.126833043704  -0.050822294394 Bohr

nuclear repulsion = 37.5265786343612
number of shells = 66
number of NR pGTOs = 250
number of NR cGTOs = 207
basis = aug-cc-pvtz
ecp = {}
CPU time:    159235.91


******** <class 'pyscf.dft.rks.RKS'> flags ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = c2h3li.chk
max_memory 10000 MB (current use 204 MB)
XC functionals = m06-2x
small_rho_cutoff = 1e-07
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function nwchem_prune at 0x2b19c47015f0>
grids dens level: 4
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b19c4701500>
Set gradient conv threshold to 3.16228e-05
tot grids = 128844
init E= -85.5427854385812
  HOMO = -0.32130164919689  LUMO = -0.0961154043711433
cycle= 1 E= -85.3647571852615  delta_E= 0.178  |g|= 0.602  |ddm|= 2.82
  HOMO = -0.118789425727295  LUMO = -0.038993123005827
cycle= 2 E= -85.3358751626145  delta_E= 0.0289  |g|= 0.66  |ddm|= 1.62
  HOMO = -0.242614562146825  LUMO = -0.0471884272646966
cycle= 3 E= -85.4650687751436  delta_E= -0.129  |g|= 0.0452  |ddm|= 0.771
  HOMO = -0.240946816946932  LUMO = -0.0432309426931069
cycle= 4 E= -85.4654022530111  delta_E= -0.000333  |g|= 0.036  |ddm|= 0.128
  HOMO = -0.242530422165228  LUMO = -0.0434006824075812
cycle= 5 E= -85.4657478915014  delta_E= -0.000346  |g|= 0.00269  |ddm|= 0.0477
  HOMO = -0.242263781468413  LUMO = -0.0447049172295935
cycle= 6 E= -85.4657535845768  delta_E= -5.69e-06  |g|= 0.00074  |ddm|= 0.0318
  HOMO = -0.242143208821737  LUMO = -0.0450381687888233
cycle= 7 E= -85.4657542488918  delta_E= -6.64e-07  |g|= 0.000262  |ddm|= 0.0133
  HOMO = -0.242085028574315  LUMO = -0.0453136079375434
cycle= 8 E= -85.4657543367411  delta_E= -8.78e-08  |g|= 4.44e-05  |ddm|= 0.00684
  HOMO = -0.242089379402852  LUMO = -0.0453138865328182
cycle= 9 E= -85.465754338905  delta_E= -2.16e-09  |g|= 6.78e-06  |ddm|= 0.000807
  HOMO = -0.242089373716776  LUMO = -0.0453041822576245
cycle= 10 E= -85.4657543389602  delta_E= -5.52e-11  |g|= 1.4e-06  |ddm|= 0.000111
  HOMO = -0.242089144040996  LUMO = -0.0453050998514792
Extra cycle  E= -85.465754338961  delta_E= -8.53e-13  |g|= 5.47e-07  |ddm|= 1.82e-05
converged SCF energy = -85.465754338961
Electronic spatial extent <R**2> (au): 459.5463
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): -187.2108, 60.1437, 1.2456
Nuclear Dipole moment(X, Y, Z, Debye): -181.1861, 59.4084, 1.2355
Total Dipole moment(X, Y, Z, Debye): 6.0247, -0.7354, -0.0101
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -25.2517, -17.9366, -19.0266
Total Quadrupole moments (XY, XZ, YZ): 4.7252, 0.0323, -0.0724
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): 125.8614, -37.9935, -0.8231, 40.9159
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -16.7390, -0.3070, 42.5531, -13.4680
Total Octupole moments (YYZ, XYZ): -0.3068, 0.1707
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -608.6588, -117.6871, -30.1062, 70.3904
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): 2.2336, 69.6946, -0.0679, 2.4382
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): 0.0389, -119.7768, -115.9750, -25.7881
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): -0.3733, 0.8834, 25.3044
