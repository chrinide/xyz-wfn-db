#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/hf/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = scf.RHF(mol) 
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Thu Jun 28 00:11:58 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 4
[INPUT] num. electrons = 22
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 H      0.876763000000  -1.387041000000   0.000000000000 AA    1.656841946152  -2.621127613543   0.000000000000 Bohr
[INPUT]  2 O     -0.044358000000  -1.084111000000   0.000000000000 AA   -0.083824471433  -2.048672878628   0.000000000000 Bohr
[INPUT]  3 N      0.013006000000   0.233767000000   0.000000000000 AA    0.024577777976   0.441755606961   0.000000000000 Bohr
[INPUT]  4 C     -0.098757000000   1.407864000000   0.000000000000 AA   -0.186623682884   2.660477380635   0.000000000000 Bohr

nuclear repulsion = 58.9553126955088
number of shells = 48
number of NR pGTOs = 199
number of NR cGTOs = 161
basis = aug-cc-pvtz
ecp = {}
CPU time:    164227.26


******** <class 'pyscf.scf.hf.RHF'> flags ********
method = RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = honc.chk
max_memory 10000 MB (current use 183 MB)
Set gradient conv threshold to 3.16228e-05
init E= -168.137703200661
  HOMO = -0.318701634788867  LUMO = 0.0205327726717087
cycle= 1 E= -167.629492324793  delta_E= 0.508  |g|= 0.519  |ddm|= 1.86
  HOMO = -0.461627967999383  LUMO = 0.00629656660866056
cycle= 2 E= -167.667267657427  delta_E= -0.0378  |g|= 0.385  |ddm|= 0.407
  HOMO = -0.459693480744547  LUMO = 0.0166765439203893
cycle= 3 E= -167.694021930799  delta_E= -0.0268  |g|= 0.0716  |ddm|= 0.19
  HOMO = -0.463668540212249  LUMO = 0.0177486193893796
cycle= 4 E= -167.695983529589  delta_E= -0.00196  |g|= 0.023  |ddm|= 0.0626
  HOMO = -0.463790735404751  LUMO = 0.0179372069564783
cycle= 5 E= -167.696238761182  delta_E= -0.000255  |g|= 0.00955  |ddm|= 0.0311
  HOMO = -0.46415130698617  LUMO = 0.0178004079625523
cycle= 6 E= -167.696271716093  delta_E= -3.3e-05  |g|= 0.00279  |ddm|= 0.0094
  HOMO = -0.463921773173505  LUMO = 0.0177926777848886
cycle= 7 E= -167.696275502152  delta_E= -3.79e-06  |g|= 0.000603  |ddm|= 0.00359
  HOMO = -0.463950381179681  LUMO = 0.0177846406167208
cycle= 8 E= -167.696275745932  delta_E= -2.44e-07  |g|= 0.000182  |ddm|= 0.00078
  HOMO = -0.463923517060877  LUMO = 0.0177828386340651
cycle= 9 E= -167.696275781908  delta_E= -3.6e-08  |g|= 8.13e-05  |ddm|= 0.000281
  HOMO = -0.46392532703569  LUMO = 0.0177812111654929
cycle= 10 E= -167.696275790854  delta_E= -8.95e-09  |g|= 2.87e-05  |ddm|= 0.000152
  HOMO = -0.463920806684034  LUMO = 0.0177807513687165
cycle= 11 E= -167.696275792024  delta_E= -1.17e-09  |g|= 8.98e-06  |ddm|= 6.26e-05
  HOMO = -0.463921223676745  LUMO = 0.0177811250813141
cycle= 12 E= -167.696275792094  delta_E= -7.05e-11  |g|= 3.2e-06  |ddm|= 1.54e-05
  HOMO = -0.463920911939929  LUMO = 0.0177811111011243
Extra cycle  E= -167.696275792102  delta_E= -7.22e-12  |g|= 2.13e-06  |ddm|= 3.59e-06
converged SCF energy = -167.696275792102
Electronic spatial extent <R**2> (au): 125.8192
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): -1.6251, 2.9150, -0.0000
Nuclear Dipole moment(X, Y, Z, Debye): 0.0980, 0.1135, 0.0000
Total Dipole moment(X, Y, Z, Debye): 1.7231, -2.8016, 0.0000
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -15.1199, -19.3463, -17.3486
Total Quadrupole moments (XY, XZ, YZ): -2.6226, 0.0000, -0.0000
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): 2.5662, -23.5844, 0.0000, 4.9280
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -6.1760, 0.0000, 0.3013, -3.4188
Total Octupole moments (YYZ, XYZ): 0.0000, -0.0000
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -15.8906, -151.8553, -16.3517, 0.5512
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): 0.0000, -1.3227, -0.0000, 0.0000
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): -0.0000, -22.3851, -5.6688, -26.4215
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): -0.0000, 0.0000, 1.0045
