#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/hf/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = scf.RHF(mol) 
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Wed Jun 27 22:40:18 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 7
[INPUT] num. electrons = 32
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C     -7.088439000000  -2.026718000000   1.353307000000 AA  -13.395208360686  -3.829941951726   2.557379592457 Bohr
[INPUT]  2 C     -5.782683000000  -1.386667000000   1.672264000000 AA  -10.927687135178  -2.620420855972   3.160120967970 Bohr
[INPUT]  3 H     -7.715125000000  -1.316243000000   0.799057000000 AA  -14.579473266785  -2.487338783376   1.509998887917 Bohr
[INPUT]  4 H     -7.611748000000  -2.266699000000   2.287955000000 AA  -14.384119049206  -4.283440316826   4.323608335329 Bohr
[INPUT]  5 H     -6.920999000000  -2.932356000000   0.764618000000 AA  -13.078792618389  -5.541349739725   1.444918609913 Bohr
[INPUT]  6 O     -4.683784000000  -1.730825000000   1.389449000000 AA   -8.851068986620  -3.270785219550   2.625678074051 Bohr
[INPUT]  7 F     -5.974341000000  -0.245682000000   2.396952000000 AA  -11.289868264760  -0.464271693735   4.529582813728 Bohr

nuclear repulsion = 118.570444471927
number of shells = 79
number of NR pGTOs = 307
number of NR cGTOs = 253
basis = aug-cc-pvtz
ecp = {}
CPU time:     99639.78


******** <class 'pyscf.scf.hf.RHF'> flags ********
method = RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = c2h3of.chk
max_memory 10000 MB (current use 165 MB)
Set gradient conv threshold to 3.16228e-05
init E= -252.559087551195
  HOMO = -0.425302958402613  LUMO = 0.0220142986968903
cycle= 1 E= -251.77608993307  delta_E= 0.783  |g|= 0.761  |ddm|= 2.16
  HOMO = -0.42187487265845  LUMO = 0.0167761127037745
cycle= 2 E= -251.841848178818  delta_E= -0.0658  |g|= 0.58  |ddm|= 0.647
  HOMO = -0.493637692690509  LUMO = 0.0227839017418452
cycle= 3 E= -251.895958954877  delta_E= -0.0541  |g|= 0.0707  |ddm|= 0.275
  HOMO = -0.482997150505718  LUMO = 0.0241309131645886
cycle= 4 E= -251.897625706754  delta_E= -0.00167  |g|= 0.0357  |ddm|= 0.0663
  HOMO = -0.491123778710406  LUMO = 0.0243554179306128
cycle= 5 E= -251.897912061179  delta_E= -0.000286  |g|= 0.0116  |ddm|= 0.024
  HOMO = -0.491987879983117  LUMO = 0.024350093336339
cycle= 6 E= -251.897977256911  delta_E= -6.52e-05  |g|= 0.00448  |ddm|= 0.012
  HOMO = -0.492234496205035  LUMO = 0.0243849570550875
cycle= 7 E= -251.897990113364  delta_E= -1.29e-05  |g|= 0.00157  |ddm|= 0.00612
  HOMO = -0.49275790814609  LUMO = 0.0244261981282048
cycle= 8 E= -251.897991718071  delta_E= -1.6e-06  |g|= 0.000323  |ddm|= 0.0024
  HOMO = -0.492800953184435  LUMO = 0.024428788631193
cycle= 9 E= -251.897991792106  delta_E= -7.4e-08  |g|= 6.27e-05  |ddm|= 0.000612
  HOMO = -0.492802040951764  LUMO = 0.0244292699861072
cycle= 10 E= -251.897991794227  delta_E= -2.12e-09  |g|= 2.04e-05  |ddm|= 8.71e-05
  HOMO = -0.492807925386184  LUMO = 0.0244292101905265
cycle= 11 E= -251.897991794422  delta_E= -1.96e-10  |g|= 6.17e-06  |ddm|= 3.09e-05
  HOMO = -0.492806788899813  LUMO = 0.0244291863600227
Extra cycle  E= -251.897991794438  delta_E= -1.56e-11  |g|= 2.87e-06  |ddm|= 6.34e-06
converged SCF energy = -251.897991794438
Electronic spatial extent <R**2> (au): 4814.4567
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): -912.8749, -205.7693, 263.1456
Nuclear Dipole moment(X, Y, Z, Debye): -916.0379, -206.7940, 262.7027
Total Dipole moment(X, Y, Z, Debye): -3.1630, -1.0247, -0.4430
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): 13.3836, -20.5436, -23.7441
Total Quadrupole moments (XY, XZ, YZ): 12.0643, -1.5198, -2.5073
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): 93.9838, 92.4089, -114.2110, 111.7866
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -71.7451, -5.6669, 136.2633, 25.4533
Total Octupole moments (YYZ, XYZ): -32.7118, 23.2997
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -2559.7835, -351.7847, -422.6172, 210.7802
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): 349.6725, -540.5188, 135.6476, 672.2100
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): 122.9052, -693.3512, -875.3751, -116.9659
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): -138.7321, 179.4376, -142.6147
