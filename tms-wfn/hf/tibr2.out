#INFO: **** input file is /home/jluis/src/git/db/tms-wfn/hf/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../tms/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = scf.RHF(mol) 
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'cromo', '4.9.0-0.bpo.3-amd64', '#1 SMP Debian 4.9.30-2+deb9u5~bpo8+1 (2017-09-28)', 'x86_64', '')  Threads 4
Python 2.7.14 (default, Apr 10 2018, 19:21:27) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Sun Jul  1 19:45:51 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD 1ca9fa9a79cffe36c02a6597649cc8e4258362c9
GIT HEAD      ref: refs/heads/master
GIT master branch  2a04e98fd7e076282a2b183302d17fc6af3d78e6

[ENV] PYSCF_MAX_MEMORY 32000
[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 92
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 Ti     0.000000000000   0.000146000000  -0.272977000000 AA    0.000000000000   0.000275900014  -0.515851768305 Bohr
[INPUT]  2 Br     0.000000000000   2.417497000000  -0.274045000000 AA    0.000000000000   4.568407236958  -0.517869995806 Bohr
[INPUT]  3 Br     0.000000000000  -2.417643000000  -0.274077000000 AA    0.000000000000  -4.568683136972  -0.517930467042 Bohr

nuclear repulsion = 471.156521320124
number of shells = 42
number of NR pGTOs = 410
number of NR cGTOs = 211
basis = aug-cc-pvtz
ecp = {}
CPU time:      7952.75


******** <class 'pyscf.scf.hf.RHF'> flags ********
method = RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = tibr2.chk
max_memory 10000 MB (current use 152 MB)
Set gradient conv threshold to 3.16228e-05
init E= -5991.03459845401
  HOMO = -0.116859139331719  LUMO = 0.0218672799829202
cycle= 1 E= -5993.02165443151  delta_E= -1.99  |g|= 0.98  |ddm|= 8.82
  HOMO = -0.451752285934001  LUMO = -0.438062634649673
cycle= 2 E= -5991.65472940716  delta_E= 1.37  |g|= 3.01  |ddm|= 15.7
  HOMO = -0.36183995207555  LUMO = -0.134279098999147
cycle= 3 E= -5993.38477453732  delta_E= -1.73  |g|= 0.385  |ddm|= 9.66
  HOMO = -0.35282722745859  LUMO = -0.00356787700582208
cycle= 4 E= -5993.43697325598  delta_E= -0.0522  |g|= 0.153  |ddm|=  2.2
  HOMO = -0.364281200747052  LUMO = 0.0144148183504936
cycle= 5 E= -5993.45120740372  delta_E= -0.0142  |g|= 0.05  |ddm|= 1.69
  HOMO = -0.369250318639207  LUMO = 0.013998333818017
cycle= 6 E= -5993.45383671692  delta_E= -0.00263  |g|= 0.00969  |ddm|= 0.819
  HOMO = -0.365633217898285  LUMO = 0.0133472940154613
cycle= 7 E= -5993.4539045375  delta_E= -6.78e-05  |g|= 0.00386  |ddm|= 0.0763
  HOMO = -0.365651633886414  LUMO = 0.0134785641696602
cycle= 8 E= -5993.45391531786  delta_E= -1.08e-05  |g|= 0.00136  |ddm|= 0.0614
  HOMO = -0.365448985679685  LUMO = 0.0134716000163128
cycle= 9 E= -5993.45391602853  delta_E= -7.11e-07  |g|= 0.000331  |ddm|= 0.00468
  HOMO = -0.365308624237638  LUMO = 0.0134633053694215
cycle= 10 E= -5993.45391611165  delta_E= -8.31e-08  |g|= 6.21e-05  |ddm|= 0.00189
  HOMO = -0.365332764454341  LUMO = 0.0134645698887443
cycle= 11 E= -5993.45391611387  delta_E= -2.23e-09  |g|= 1.22e-05  |ddm|= 0.000469
  HOMO = -0.365332514260145  LUMO = 0.0134646188244018
cycle= 12 E= -5993.45391611402  delta_E= -1.46e-10  |g|= 2.58e-06  |ddm|= 0.000112
  HOMO = -0.365333266104859  LUMO = 0.0134646138496645
Extra cycle  E= -5993.45391611401  delta_E= 1.09e-11  |g|= 1.06e-06  |ddm|= 1.52e-05
converged SCF energy = -5993.45391611401
Electronic spatial extent <R**2> (au): 1618.2611
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): 0.0000, -0.0116, -120.9957
Nuclear Dipole moment(X, Y, Z, Debye): 0.0000, -0.0091, -120.9916
Total Dipole moment(X, Y, Z, Debye): -0.0000, 0.0025, 0.0041
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -53.8694, -70.6361, -53.8716
Total Quadrupole moments (XY, XZ, YZ): -0.0000, -0.0000, -0.0008
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): 0.0000, 0.0216, 44.2434, -0.0000
Total Octupole moments (XXY, XXZ, XZZ, YZZ): 0.0033, 14.7475, 0.0000, 0.0036
Total Octupole moments (YYZ, XYZ): 19.3329, 0.0000
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -76.2067, -1452.9446, -100.4310, -0.0000
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): -0.0000, -0.0000, -0.0105, -0.0000
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): -0.0073, -252.7868, -29.4395, -258.0782
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): -0.0024, 0.0000, -0.0000
