#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/hf/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = scf.RHF(mol) 
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Wed Jun 27 22:51:14 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 12
[INPUT] num. electrons = 58
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 H     -2.021270000000  -1.511323000000   0.000000000000 AA   -3.819646723800  -2.855986555756   0.000000000000 Bohr
[INPUT]  2 H     -0.024956000000   1.995967000000   0.000000000000 AA   -0.047160005165   3.771830983670   0.000000000000 Bohr
[INPUT]  3 H      2.183202000000  -1.601182000000   0.000000000000 AA    4.125653854603  -3.025795455583   0.000000000000 Bohr
[INPUT]  4 H     -0.028491000000  -2.791232000000   0.000000000000 AA   -0.053840187015  -5.274664030122   0.000000000000 Bohr
[INPUT]  5 C     -1.227179000000   0.357761000000   0.000000000000 AA   -2.319032215818   0.676070308051   0.000000000000 Bohr
[INPUT]  6 C      1.271535000000   0.390834000000   0.000000000000 AA    2.402852907799   0.738569220168   0.000000000000 Bohr
[INPUT]  7 C      1.239993000000  -1.063927000000   0.000000000000 AA    2.343247166378  -2.010530646530   0.000000000000 Bohr
[INPUT]  8 C      0.052203000000  -1.705107000000   0.000000000000 AA    0.098649372881  -3.222185243079   0.000000000000 Bohr
[INPUT]  9 O     -2.291030000000   0.945299000000   0.000000000000 AA   -4.329419243162   1.786356215825   0.000000000000 Bohr
[INPUT] 10 O      2.270515000000   1.086571000000   0.000000000000 AA    4.290651511717   2.053321604895   0.000000000000 Bohr
[INPUT] 11 N     -1.136805000000  -1.025169000000   0.000000000000 AA   -2.148250107036  -1.937288641394   0.000000000000 Bohr
[INPUT] 12 N     -0.000278000000   0.983279000000   0.000000000000 AA   -0.000525343863   1.858128014036   0.000000000000 Bohr

nuclear repulsion = 356.967258823967
number of shells = 140
number of NR pGTOs = 564
number of NR cGTOs = 460
basis = aug-cc-pvtz
ecp = {}
CPU time:    107419.00


******** <class 'pyscf.scf.hf.RHF'> flags ********
method = RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = c4h4o2n2.chk
max_memory 10000 MB (current use 165 MB)
Set gradient conv threshold to 3.16228e-05
init E= -415.213643750171
  HOMO = -0.263662575852579  LUMO = -0.00481784097489173
cycle= 1 E= -412.341778693745  delta_E= 2.87  |g|= 1.09  |ddm|= 5.29
  HOMO = -0.320239557975157  LUMO = -0.00539139300985222
cycle= 2 E= -412.444478766551  delta_E= -0.103  |g|= 0.992  |ddm|= 1.37
  HOMO = -0.365993886357045  LUMO = 0.0111702759039286
cycle= 3 E= -412.618728692982  delta_E= -0.174  |g|= 0.121  |ddm|= 0.61
  HOMO = -0.370052570909985  LUMO = 0.0143320099724514
cycle= 4 E= -412.623886946546  delta_E= -0.00516  |g|= 0.0333  |ddm|= 0.141
  HOMO = -0.36853960845484  LUMO = 0.0139461189648077
cycle= 5 E= -412.624430741851  delta_E= -0.000544  |g|= 0.0155  |ddm|= 0.0459
  HOMO = -0.369422141996086  LUMO = 0.0141234783305337
cycle= 6 E= -412.624591074527  delta_E= -0.00016  |g|= 0.00722  |ddm|= 0.0291
  HOMO = -0.369541603426829  LUMO = 0.0142456663558661
cycle= 7 E= -412.624624730539  delta_E= -3.37e-05  |g|= 0.00243  |ddm|= 0.0147
  HOMO = -0.369306063876884  LUMO = 0.0143333730033675
cycle= 8 E= -412.624628494689  delta_E= -3.76e-06  |g|= 0.000939  |ddm|= 0.0049
  HOMO = -0.369336356875493  LUMO = 0.0143535250764397
cycle= 9 E= -412.624628898458  delta_E= -4.04e-07  |g|= 0.00033  |ddm|= 0.00162
  HOMO = -0.369326384599642  LUMO = 0.0143546873900483
cycle= 10 E= -412.624628957686  delta_E= -5.92e-08  |g|= 0.000152  |ddm|= 0.000589
  HOMO = -0.369303134793086  LUMO = 0.0143599926779588
cycle= 11 E= -412.62462896834  delta_E= -1.07e-08  |g|= 4.3e-05  |ddm|= 0.000302
  HOMO = -0.36930480027193  LUMO = 0.0143598963258344
cycle= 12 E= -412.62462896968  delta_E= -1.34e-09  |g|= 1.7e-05  |ddm|= 0.000115
  HOMO = -0.369303609514519  LUMO = 0.0143604596099553
cycle= 13 E= -412.624628969803  delta_E= -1.22e-10  |g|= 8.26e-06  |ddm|= 4.07e-05
  HOMO = -0.369303818198588  LUMO = 0.0143604297476185
Extra cycle  E= -412.624628969824  delta_E= -2.15e-11  |g|= 5.39e-06  |ddm|= 1.05e-05
converged SCF energy = -412.624628969824
Electronic spatial extent <R**2> (au): 830.3175
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): 1.1971, 4.5174, 0.0000
Nuclear Dipole moment(X, Y, Z, Debye): 0.0197, -0.3299, 0.0000
Total Dipole moment(X, Y, Z, Debye): -1.1775, -4.8473, -0.0000
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -60.1477, -37.9552, -46.6674
Total Quadrupole moments (XY, XZ, YZ): 1.7425, 0.0000, 0.0000
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): -7.2696, -8.7245, -0.0000, -7.4295
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -33.3666, -0.0000, -2.1100, 4.4045
Total Octupole moments (YYZ, XYZ): -0.0000, -0.0000
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -719.2112, -303.7319, -46.0726, 5.7522
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): 0.0000, 5.6829, 0.0000, -0.0000
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): 0.0000, -175.0703, -113.2461, -75.1655
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): 0.0000, -0.0000, 1.7302
