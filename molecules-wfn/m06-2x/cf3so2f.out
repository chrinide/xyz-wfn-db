#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/m06-2x/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = dft.RKS(mol) 
    mf.grids.level = 4
    mf.xc = 'm06-2x'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Thu Jun 28 04:41:30 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 8
[INPUT] num. electrons = 74
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C     -0.986680000000   0.028076000000   0.006973000000 AA   -1.864554972586   0.053055950673   0.013177060267 Bohr
[INPUT]  2 S      0.876652000000  -0.211914000000  -0.054727000000 AA    1.656632186552  -0.400459421961  -0.103419041619 Bohr
[INPUT]  3 F     -1.335378000000   0.403851000000   1.225338000000 AA   -2.523498692769   0.763167785132   2.315553230022 Bohr
[INPUT]  4 F     -1.544498000000  -1.136435000000  -0.291763000000 AA   -2.918678219938  -2.147550908370  -0.551352163281 Bohr
[INPUT]  5 F     -1.336361000000   0.944897000000  -0.878847000000 AA   -2.525356293550   1.785596545923  -1.660780135396 Bohr
[INPUT]  6 O      1.288451000000  -0.409157000000  -1.435423000000 AA    2.434819514922  -0.773194671949  -2.712556342902 Bohr
[INPUT]  7 O      1.287366000000  -1.051116000000   1.059645000000 AA    2.432769162077  -1.986321365148   2.002438839265 Bohr
[INPUT]  8 F      1.227548000000   1.323500000000   0.340503000000 AA    2.319729524758   2.501052525862   0.643457414593 Bohr

nuclear repulsion = 562.747570667159
number of shells = 104
number of NR pGTOs = 481
number of NR cGTOs = 372
basis = aug-cc-pvtz
ecp = {}
CPU time:    133382.24


******** <class 'pyscf.dft.rks.RKS'> flags ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = cf3so2f.chk
max_memory 10000 MB (current use 236 MB)
XC functionals = m06-2x
small_rho_cutoff = 1e-07
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function nwchem_prune at 0x2b19c47015f0>
grids dens level: 4
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b19c4701500>
Set gradient conv threshold to 3.16228e-05
tot grids = 231310
init E= -987.958751497112
  HOMO = -0.379673441573953  LUMO = -0.0362621118373148
cycle= 1 E= -985.758087914528  delta_E=  2.2  |g|= 1.39  |ddm|= 2.66
  HOMO = -0.381116010948287  LUMO = -0.138184750084997
cycle= 2 E= -985.229431967223  delta_E= 0.529  |g|= 2.31  |ddm|=  1.9
  HOMO = -0.458212059698256  LUMO = -0.014860811289672
cycle= 3 E= -986.111233305893  delta_E= -0.882  |g|= 0.164  |ddm|= 1.16
  HOMO = -0.442069332850175  LUMO = -0.00767289966177837
cycle= 4 E= -986.113401703365  delta_E= -0.00217  |g|= 0.126  |ddm|= 0.134
  HOMO = -0.450041850827779  LUMO = -0.0059432136645718
cycle= 5 E= -986.115709379565  delta_E= -0.00231  |g|= 0.0208  |ddm|= 0.0666
  HOMO = -0.450971774345716  LUMO = -0.00713809656544785
cycle= 6 E= -986.115770893263  delta_E= -6.15e-05  |g|= 0.00431  |ddm|= 0.0111
  HOMO = -0.450683484761619  LUMO = -0.00685442109206171
cycle= 7 E= -986.115773672293  delta_E= -2.78e-06  |g|= 0.00197  |ddm|= 0.00303
  HOMO = -0.450675960334288  LUMO = -0.00684840869458776
cycle= 8 E= -986.115774303656  delta_E= -6.31e-07  |g|= 0.000345  |ddm|= 0.00132
  HOMO = -0.450727889854558  LUMO = -0.00687711681436176
cycle= 9 E= -986.115774332062  delta_E= -2.84e-08  |g|= 9.84e-05  |ddm|= 0.000389
  HOMO = -0.450717515486809  LUMO = -0.00686789238070644
cycle= 10 E= -986.115774334235  delta_E= -2.17e-09  |g|= 2.98e-05  |ddm|= 0.000107
  HOMO = -0.450716258433088  LUMO = -0.00686774108627944
cycle= 11 E= -986.115774334434  delta_E= -1.99e-10  |g|= 1.33e-05  |ddm|= 3.15e-05
  HOMO = -0.450717759771073  LUMO = -0.00686823645633535
Extra cycle  E= -986.115774334431  delta_E= 3.18e-12  |g|= 1.61e-05  |ddm|= 1.48e-05
converged SCF energy = -986.115774334431
Electronic spatial extent <R**2> (au): 854.0671
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): 10.2888, -5.8171, -1.5172
Nuclear Dipole moment(X, Y, Z, Debye): 8.7163, -5.1972, -1.3590
Total Dipole moment(X, Y, Z, Debye): -1.5725, 0.6199, 0.1582
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -49.5985, -50.3181, -52.5943
Total Quadrupole moments (XY, XZ, YZ): 1.2240, 0.3167, 0.6280
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): -16.8263, 8.8737, 4.3382, -7.0327
Total Octupole moments (XXY, XXZ, XZZ, YZZ): 5.1647, 1.3385, -9.7346, 5.2281
Total Octupole moments (YYZ, XYZ): -0.6939, 0.7426
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -447.2753, -203.7106, -221.1291, 17.3205
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): 4.4794, 15.5351, 3.1276, 7.1419
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): 1.6920, -113.9581, -119.0408, -71.4114
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): 1.4014, -0.8944, 8.6560
