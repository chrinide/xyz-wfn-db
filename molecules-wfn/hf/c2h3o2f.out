#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/hf/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = scf.RHF(mol) 
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Wed Jun 27 23:26:40 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 8
[INPUT] num. electrons = 40
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C     -7.076330000000  -2.020977000000   1.447032000000 AA  -13.372325667043  -3.819093034045   2.734494173482 Bohr
[INPUT]  2 C     -5.751183000000  -1.436526000000   1.792708000000 AA  -10.868160762254  -2.714640710817   3.387727141317 Bohr
[INPUT]  3 H     -7.759281000000  -1.231565000000   1.108755000000 AA  -14.662916013541  -2.327320554600   2.095243289242 Bohr
[INPUT]  4 H     -7.527487000000  -2.487456000000   2.331461000000 AA  -14.224888836224  -4.700610586906   4.405822760105 Bohr
[INPUT]  5 H     -6.920092000000  -2.759712000000   0.656934000000 AA  -13.077078636794  -5.215099862676   1.241425341915 Bohr
[INPUT]  6 O     -4.679084000000  -1.682136000000   1.318257000000 AA   -8.842187273834  -3.178776344271   2.491144691791 Bohr
[INPUT]  7 O     -5.705511000000  -0.478065000000   2.788375000000 AA  -10.781853190693  -0.903411919740   5.269265082584 Bohr
[INPUT]  8 F     -7.007552000000  -0.238752000000   3.303219000000 AA  -13.242354083648  -0.451175891692   6.242179239460 Bohr

nuclear repulsion = 178.305616201379
number of shells = 92
number of NR pGTOs = 365
number of NR cGTOs = 299
basis = aug-cc-pvtz
ecp = {}
CPU time:    132455.10


******** <class 'pyscf.scf.hf.RHF'> flags ********
method = RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = c2h3o2f.chk
max_memory 10000 MB (current use 177 MB)
Set gradient conv threshold to 3.16228e-05
init E= -327.410404497061
  HOMO = -0.391918949078493  LUMO = -0.10508542280495
cycle= 1 E= -326.503618202159  delta_E= 0.907  |g|= 0.806  |ddm|= 2.39
  HOMO = -0.418539333531046  LUMO = 0.0189444599063911
cycle= 2 E= -326.569629101841  delta_E= -0.066  |g|= 0.646  |ddm|= 0.668
  HOMO = -0.490817895187316  LUMO = 0.0236994393862113
cycle= 3 E= -326.639334065516  delta_E= -0.0697  |g|= 0.103  |ddm|= 0.325
  HOMO = -0.475719673895321  LUMO = 0.0250171626474116
cycle= 4 E= -326.642347172077  delta_E= -0.00301  |g|= 0.0326  |ddm|= 0.0871
  HOMO = -0.485077201935818  LUMO = 0.0250881349667855
cycle= 5 E= -326.642714985658  delta_E= -0.000368  |g|= 0.0108  |ddm|= 0.0313
  HOMO = -0.486031411535239  LUMO = 0.0251102068990928
cycle= 6 E= -326.642797901483  delta_E= -8.29e-05  |g|= 0.00615  |ddm|= 0.0152
  HOMO = -0.486167847028955  LUMO = 0.0251146383226185
cycle= 7 E= -326.642817940002  delta_E= -2e-05  |g|= 0.00276  |ddm|= 0.00821
  HOMO = -0.486900598560045  LUMO = 0.0251632312311279
cycle= 8 E= -326.642821128615  delta_E= -3.19e-06  |g|= 0.000655  |ddm|= 0.00324
  HOMO = -0.486944084915779  LUMO = 0.0251719970756502
cycle= 9 E= -326.642821404208  delta_E= -2.76e-07  |g|= 0.000239  |ddm|= 0.00117
  HOMO = -0.486951226094763  LUMO = 0.0251724867598672
cycle= 10 E= -326.642821424728  delta_E= -2.05e-08  |g|= 8.17e-05  |ddm|= 0.000245
  HOMO = -0.486959606261991  LUMO = 0.0251733234414584
cycle= 11 E= -326.642821428816  delta_E= -4.09e-09  |g|= 3.86e-05  |ddm|= 0.000106
  HOMO = -0.486960063487711  LUMO = 0.0251731457928943
cycle= 12 E= -326.642821429952  delta_E= -1.14e-09  |g|= 1.61e-05  |ddm|= 5.95e-05
  HOMO = -0.486959739501436  LUMO = 0.0251731688144487
cycle= 13 E= -326.642821430244  delta_E= -2.93e-10  |g|= 5.54e-06  |ddm|= 3.66e-05
  HOMO = -0.486960438939812  LUMO = 0.0251731474520736
Extra cycle  E= -326.642821430263  delta_E= -1.84e-11  |g|= 3.21e-06  |ddm|= 6.14e-06
converged SCF energy = -326.642821430263
Electronic spatial extent <R**2> (au): 6578.3762
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): -1175.3321, -223.0545, 414.1272
Nuclear Dipole moment(X, Y, Z, Debye): -1178.3059, -224.0893, 413.6405
Total Dipole moment(X, Y, Z, Debye): -2.9738, -1.0348, -0.4867
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): 5.3810, -25.0780, -30.8045
Total Quadrupole moments (XY, XZ, YZ): 12.0604, -0.1554, -3.0228
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): 226.7973, 97.5096, -184.7428, 142.1603
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -68.9480, -41.3922, 185.8291, 26.7184
Total Octupole moments (YYZ, XYZ): -49.8316, 25.8456
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -4216.4609, -356.5860, -884.9323, 162.6313
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): 892.8750, -571.5432, 155.7805, 1147.3063
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): 151.4441, -900.6159, -1295.2711, -179.2300
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): -141.6920, 295.0180, -151.7542
