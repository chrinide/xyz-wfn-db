#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/m06-2x/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = dft.RKS(mol) 
    mf.grids.level = 4
    mf.xc = 'm06-2x'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Thu Jun 28 06:53:13 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 8
[INPUT] num. electrons = 58
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C      1.270584000000   0.840017000000  -0.000039000000 AA    2.401055778254   1.587402069979  -0.000073699319 Bohr
[INPUT]  2 H      1.862572000000  -0.086100000000  -0.000026000000 AA    3.519750967283  -0.162705419325  -0.000049132879 Bohr
[INPUT]  3 N     -0.003023000000   0.854414000000  -0.000053000000 AA   -0.005712642075   1.614608456994  -0.000100155485 Bohr
[INPUT]  4 C      2.000701000000   2.141371000000   0.000004000000 AA    3.780776947143   4.046604721086   0.000007558904 Bohr
[INPUT]  5 H      1.298919000000   2.982495000000   0.000004000000 AA    2.454601167994   5.636098717885   0.000007558904 Bohr
[INPUT]  6 H      2.650134000000   2.202100000000   0.885751000000 AA    5.008027453398   4.161365898905   1.673826804560 Bohr
[INPUT]  7 H      2.650174000000   2.202133000000  -0.885711000000 AA    5.008103042443   4.161428259867  -1.673751215515 Bohr
[INPUT]  8 Br    -0.794664000000  -0.876333000000   0.000070000000 AA   -1.501697321051  -1.656029363918   0.000132280829 Bohr

nuclear repulsion = 219.399519817105
number of shells = 89
number of NR pGTOs = 401
number of NR cGTOs = 289
basis = aug-cc-pvtz
ecp = {}
CPU time:    201116.23


******** <class 'pyscf.dft.rks.RKS'> flags ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = c2h4nbr.chk
max_memory 10000 MB (current use 241 MB)
XC functionals = m06-2x
small_rho_cutoff = 1e-07
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function nwchem_prune at 0x2b19c47015f0>
grids dens level: 4
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b19c4701500>
Set gradient conv threshold to 3.16228e-05
tot grids = 180066
init E= -2706.93915808079
  HOMO = -0.309117558841157  LUMO = -0.0865931616945545
cycle= 1 E= -2707.52405492478  delta_E= -0.585  |g|= 0.403  |ddm|= 3.46
  HOMO = -0.327302597879393  LUMO = -0.0263991469994903
cycle= 2 E= -2707.53221219627  delta_E= -0.00816  |g|= 0.344  |ddm|= 0.665
  HOMO = -0.31999232856123  LUMO = -0.0163331084696852
cycle= 3 E= -2707.55584845767  delta_E= -0.0236  |g|= 0.0999  |ddm|= 0.243
  HOMO = -0.32880494611118  LUMO = -0.0196900550547742
cycle= 4 E= -2707.55770627584  delta_E= -0.00186  |g|= 0.0392  |ddm|= 0.0891
  HOMO = -0.330527228606359  LUMO = -0.0187029147778757
cycle= 5 E= -2707.55804039326  delta_E= -0.000334  |g|= 0.00533  |ddm|= 0.0342
  HOMO = -0.329842319615214  LUMO = -0.0185355283547896
cycle= 6 E= -2707.55804890726  delta_E= -8.51e-06  |g|= 0.0035  |ddm|= 0.0108
  HOMO = -0.329889356588275  LUMO = -0.018476980307759
cycle= 7 E= -2707.55805195299  delta_E= -3.05e-06  |g|= 0.000652  |ddm|= 0.0028
  HOMO = -0.329991924337441  LUMO = -0.0185077329026351
cycle= 8 E= -2707.55805213018  delta_E= -1.77e-07  |g|= 0.000202  |ddm|= 0.00129
  HOMO = -0.330009614909265  LUMO = -0.0185074812139139
cycle= 9 E= -2707.55805214941  delta_E= -1.92e-08  |g|= 5.68e-05  |ddm|= 0.00052
  HOMO = -0.330005983594896  LUMO = -0.0185038175697945
cycle= 10 E= -2707.55805215045  delta_E= -1.05e-09  |g|= 1.44e-05  |ddm|= 0.000145
  HOMO = -0.33000764348383  LUMO = -0.0185043477675603
cycle= 11 E= -2707.55805215056  delta_E= -1.11e-10  |g|= 3.76e-06  |ddm|= 3.08e-05
  HOMO = -0.330007558973983  LUMO = -0.0185041903402968
Extra cycle  E= -2707.55805215058  delta_E= -1.55e-11  |g|= 1.83e-06  |ddm|= 9.46e-06
converged SCF energy = -2707.55805215058
Electronic spatial extent <R**2> (au): 646.0366
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): -1.6739, 1.6416, 0.0090
Nuclear Dipole moment(X, Y, Z, Debye): 1.2253, 2.3930, 0.0091
Total Dipole moment(X, Y, Z, Debye): 2.8993, 0.7514, 0.0000
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -32.8842, -35.1061, -37.6544
Total Quadrupole moments (XY, XZ, YZ): 3.8822, -0.0001, 0.0000
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): -14.8420, -24.0371, -0.0025, -4.0836
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -4.7845, -0.0007, -6.3412, -8.0322
Total Octupole moments (YYZ, XYZ): -0.0003, 0.0003
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -352.1651, -375.0245, -49.6374, -140.7858
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): 0.0034, -137.5744, 0.0039, 0.0039
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): 0.0047, -114.4787, -65.5308, -74.7044
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): 0.0012, 0.0007, -48.6696
