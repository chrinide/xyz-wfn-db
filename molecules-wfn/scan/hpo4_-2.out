#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/scan/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = dft.RKS(mol) 
    mf.grids.level = 4
    mf.xc = 'scan'
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)

#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Sat Jun 30 02:03:14 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 6
[INPUT] num. electrons = 50
[INPUT] charge = -2
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 P     -1.406093000000   0.887006000000  -0.046926000000 AA   -2.657130675668   1.676198410846  -0.088677288121 Bohr
[INPUT]  2 O      0.356933000000   1.149598000000  -0.107220000000 AA    0.674505614819   2.172425373348  -0.202616435076 Bohr
[INPUT]  3 O     -1.984223000000   1.901770000000  -1.078605000000 AA   -3.749638040063   3.593824451914  -2.038268046586 Bohr
[INPUT]  4 O     -1.787578000000   1.162439000000   1.438698000000 AA   -3.378032846298   2.196691346513   2.718745195960 Bohr
[INPUT]  5 H      0.603586000000   0.260496000000  -0.385209000000 AA    1.140612232622   0.492266096545  -0.727939510718 Bohr
[INPUT]  6 O     -1.439185000000  -0.623699000000  -0.487929000000 AA   -2.719665492582  -1.178620294165  -0.922052178233 Bohr

nuclear repulsion = 247.475405944195
number of shells = 74
number of NR pGTOs = 332
number of NR cGTOs = 257
basis = aug-cc-pvtz
ecp = {}
CPU time:     86332.61


******** <class 'pyscf.dft.rks.RKS'> flags ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = hpo4_-2.chk
max_memory 10000 MB (current use 218 MB)
XC functionals = scan
small_rho_cutoff = 1e-07
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function nwchem_prune at 0x2aeb3297f5f0>
grids dens level: 4
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2aeb3297f500>
Set gradient conv threshold to 3.16228e-05
tot grids = 158686
init E= -643.216214280281
  HOMO = -0.39065301797699  LUMO = -0.0510474777604053
cycle= 1 E= -642.202010584673  delta_E= 1.01  |g|= 1.64  |ddm|=  1.9
  HOMO = 0.347234200079115  LUMO = 0.348937220892888
cycle= 2 E= -632.35810502656  delta_E= 9.84  |g|= 4.76  |ddm|=  333
  HOMO = -0.0165044193873295  LUMO = 0.183668731598085
cycle= 3 E= -642.44406835939  delta_E= -10.1  |g|= 1.04  |ddm|=  333
  HOMO = 0.035312116823907  LUMO = 0.210050266762076
cycle= 4 E= -642.671604688327  delta_E= -0.228  |g|= 0.399  |ddm|= 0.628
  HOMO = 0.141198919325091  LUMO = 0.225441053788383
cycle= 5 E= -642.693727288902  delta_E= -0.0221  |g|= 0.365  |ddm|= 0.578
  HOMO = 0.18233059004026  LUMO = 0.228394476216687
cycle= 6 E= -642.720000880167  delta_E= -0.0263  |g|= 0.0324  |ddm|= 0.314
  HOMO = 0.183335293698293  LUMO = 0.226802572578062
cycle= 7 E= -642.720048713759  delta_E= -4.78e-05  |g|= 0.0311  |ddm|= 0.0638
  HOMO = 0.183314234960299  LUMO = 0.226772625252474
cycle= 8 E= -642.720205467713  delta_E= -0.000157  |g|= 0.0132  |ddm|= 0.0453
  HOMO = 0.183324530665892  LUMO = 0.226642114217914
cycle= 9 E= -642.720238197441  delta_E= -3.27e-05  |g|= 0.00105  |ddm|= 0.0144
  HOMO = 0.183229537526313  LUMO = 0.226614932353552
cycle= 10 E= -642.72023841887  delta_E= -2.21e-07  |g|= 0.000247  |ddm|= 0.0034
  HOMO = 0.183186115091714  LUMO = 0.226613175719229
cycle= 11 E= -642.720238432418  delta_E= -1.35e-08  |g|= 5.41e-05  |ddm|= 0.000983
  HOMO = 0.183170323805713  LUMO = 0.226615204993889
cycle= 12 E= -642.720238432754  delta_E= -3.36e-10  |g|= 4.34e-05  |ddm|= 0.00029
  HOMO = 0.183169574246561  LUMO = 0.226614985812678
cycle= 13 E= -642.720238433003  delta_E= -2.49e-10  |g|= 2.85e-05  |ddm|= 5.14e-05
  HOMO = 0.183173315969827  LUMO = 0.22661527867333
Extra cycle  E= -642.720238432457  delta_E= 5.46e-10  |g|= 6.14e-05  |ddm|= 7.3e-05
converged SCF energy = -642.720238432457
Electronic spatial extent <R**2> (au): 847.8430
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): -299.2018, 212.2066, -14.4858
Nuclear Dipole moment(X, Y, Z, Debye): -284.9272, 203.1104, -14.2633
Total Dipole moment(X, Y, Z, Debye): 14.2747, -9.0961, 0.2224
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -69.8647, -63.5759, -55.8420
Total Quadrupole moments (XY, XZ, YZ): 12.6991, -1.1371, 0.5759
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): 208.8732, -141.8552, 0.8465, 87.1378
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -70.0739, 4.6780, 79.0598, -54.9760
Total Octupole moments (YYZ, XYZ): 12.4580, -2.1835
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -712.1209, -466.8655, -241.7117, 213.1766
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): -13.7073, 204.0819, 28.6548, 3.6086
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): 0.9682, -247.0325, -188.8436, -134.3535
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): 10.2202, -20.7388, 83.3066
