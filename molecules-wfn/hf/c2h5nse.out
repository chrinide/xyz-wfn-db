#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/hf/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = scf.RHF(mol) 
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Wed Jun 27 22:28:28 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 9
[INPUT] num. electrons = 58
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 H      1.126248000000  -1.795591000000   0.000000000000 AA    2.128300268339  -3.393175221734   0.000000000000 Bohr
[INPUT]  2 H      2.028301000000  -0.309181000000   0.000000000000 AA    3.832933388181  -0.584267412919   0.000000000000 Bohr
[INPUT]  3 H     -2.130846000000  -0.229349000000   0.000000000000 AA   -4.026715353625  -0.433406796943   0.000000000000 Bohr
[INPUT]  4 H     -1.287152000000  -1.529479000000   0.889421000000 AA   -2.432364760686  -2.890296423274   1.680762099437 Bohr
[INPUT]  5 H     -1.287151000000  -1.529479000000  -0.889421000000 AA   -2.432362870960  -2.890296423274  -1.680762099437 Bohr
[INPUT]  6 C      0.006116000000  -0.067939000000   0.000000000000 AA    0.011557564978  -0.128386103177   0.000000000000 Bohr
[INPUT]  7 C     -1.254948000000  -0.880954000000   0.000000000000 AA   -2.371508020571  -1.664761788340   0.000000000000 Bohr
[INPUT]  8 Se     0.019678000000   1.734021000000   0.000000000000 AA    0.037186030679   3.276824784244   0.000000000000 Bohr
[INPUT]  9 N      1.138247000000  -0.785474000000   0.000000000000 AA    2.150975092108  -1.484330737967   0.000000000000 Bohr

nuclear repulsion = 240.298638913861
number of shells = 98
number of NR pGTOs = 426
number of NR cGTOs = 312
basis = aug-cc-pvtz
ecp = {}
CPU time:     91260.42


******** <class 'pyscf.scf.hf.RHF'> flags ********
method = RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = c2h5nse.chk
max_memory 10000 MB (current use 165 MB)
Set gradient conv threshold to 3.16228e-05
init E= -2532.91134345461
  HOMO = -0.266177556670515  LUMO = -0.00889496964094435
cycle= 1 E= -2532.94601357855  delta_E= -0.0347  |g|= 0.476  |ddm|= 2.93
  HOMO = -0.253317607269539  LUMO = -0.00122312807736805
cycle= 2 E= -2533.00442907936  delta_E= -0.0584  |g|= 0.327  |ddm|= 0.658
  HOMO = -0.296817504960368  LUMO = 0.0155320562595899
cycle= 3 E= -2533.03101965033  delta_E= -0.0266  |g|= 0.0842  |ddm|= 0.277
  HOMO = -0.305504554283535  LUMO = 0.0176156722758229
cycle= 4 E= -2533.03339836794  delta_E= -0.00238  |g|= 0.0164  |ddm|= 0.115
  HOMO = -0.300787818459094  LUMO = 0.0168799829125506
cycle= 5 E= -2533.03356635055  delta_E= -0.000168  |g|= 0.00777  |ddm|= 0.0284
  HOMO = -0.301131242060583  LUMO = 0.0168976001012026
cycle= 6 E= -2533.0335944683  delta_E= -2.81e-05  |g|= 0.0028  |ddm|= 0.0104
  HOMO = -0.301666139155567  LUMO = 0.0170176508593623
cycle= 7 E= -2533.03360026286  delta_E= -5.79e-06  |g|= 0.000724  |ddm|= 0.00623
  HOMO = -0.301604782449357  LUMO = 0.0170256832146213
cycle= 8 E= -2533.03360063249  delta_E= -3.7e-07  |g|= 0.000163  |ddm|= 0.0018
  HOMO = -0.301610049193574  LUMO = 0.017024180171366
cycle= 9 E= -2533.03360064879  delta_E= -1.63e-08  |g|= 6.77e-05  |ddm|= 0.000435
  HOMO = -0.301603570782549  LUMO = 0.0170241185024782
cycle= 10 E= -2533.03360065101  delta_E= -2.23e-09  |g|= 2.55e-05  |ddm|= 0.000156
  HOMO = -0.301603148792444  LUMO = 0.0170232985561951
cycle= 11 E= -2533.03360065144  delta_E= -4.27e-10  |g|= 1.04e-05  |ddm|= 7.43e-05
  HOMO = -0.301601127686241  LUMO = 0.0170230314511486
Extra cycle  E= -2533.03360065151  delta_E= -6.68e-11  |g|= 5.33e-06  |ddm|= 2.35e-05
converged SCF energy = -2533.03360065151
Electronic spatial extent <R**2> (au): 630.3950
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): -2.7455, 208.8997, -0.0000
Nuclear Dipole moment(X, Y, Z, Debye): -1.9540, 203.5212, 0.0000
Total Dipole moment(X, Y, Z, Debye): 0.7915, -5.3786, 0.0000
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -34.7172, -39.6871, -40.3533
Total Quadrupole moments (XY, XZ, YZ): -1.0462, -0.0000, 0.0000
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): 11.7633, -73.8262, 0.0000, 3.7923
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -28.3587, 0.0000, -0.1360, -23.6609
Total Octupole moments (YYZ, XYZ): 0.0000, 0.0000
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -166.9468, -444.2586, -60.2371, -15.6999
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): -0.0000, -18.2083, 0.0000, 0.0000
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): 0.0000, -117.1298, -44.6806, -90.8004
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): -0.0000, -0.0000, -0.7931
