#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/pbe/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = dft.RKS(mol) 
    mf.grids.level = 4
    mf.xc = 'pbe,pbe'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)

#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Thu Jun 28 23:38:17 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 10
[INPUT] num. electrons = 42
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C     -3.147275000000   2.812494000000   0.427548000000 AA   -5.947487788691   5.314843386982   0.807948625106 Bohr
[INPUT]  2 C     -6.069041000000   2.791170000000  -1.194855000000 AA  -11.468825328756   5.274546867102  -2.257948708567 Bohr
[INPUT]  3 O     -5.816664000000   3.058535000000   0.179263000000 AA  -10.991901918617   5.779793492397   0.338757974268 Bohr
[INPUT]  4 H     -5.169961000000   2.952337000000  -1.810385000000 AA   -9.769810364683   5.579108357420  -3.421131830021 Bohr
[INPUT]  5 H     -6.845061000000   3.504198000000  -1.502376000000 AA  -12.935290595941   6.621974506249  -2.839079176120 Bohr
[INPUT]  6 H     -6.431566000000   1.763208000000  -1.342604000000 AA  -12.153898292064   3.331980220642  -2.537153853746 Bohr
[INPUT]  7 S     -4.695476000000   2.009807000000   0.888867000000 AA   -8.873163664468   3.797984793234   1.679715191164 Bohr
[INPUT]  8 H     -2.357506000000   2.230614000000   0.924502000000 AA   -4.455040677019   4.215249549621   1.747055581613 Bohr
[INPUT]  9 H     -3.121889000000   3.843718000000   0.800373000000 AA   -5.899515201292   7.263574320061   1.512485767497 Bohr
[INPUT] 10 H     -2.973462000000   2.783449000000  -0.655594000000 AA   -5.619028821801   5.259956291694  -1.238893108908 Bohr

nuclear repulsion = 175.257930539081
number of shells = 106
number of NR pGTOs = 399
number of NR cGTOs = 326
basis = aug-cc-pvtz
ecp = {}
CPU time:     36307.44


******** <class 'pyscf.dft.rks.RKS'> flags ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = c2h6so.chk
max_memory 10000 MB (current use 219 MB)
XC functionals = pbe,pbe
small_rho_cutoff = 1e-07
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function nwchem_prune at 0x2ab98a2da5f0>
grids dens level: 4
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2ab98a2da500>
Set gradient conv threshold to 3.16228e-05
tot grids = 210406
init E= -553.098678451375
  HOMO = -0.255323042898896  LUMO = -0.108631292828422
cycle= 1 E= -552.760454419733  delta_E= 0.338  |g|= 0.85  |ddm|= 2.49
  HOMO = -0.0860982292921902  LUMO = -0.00554426341482231
cycle= 2 E= -552.255824537711  delta_E= 0.505  |g|= 1.71  |ddm|= 1.51
  HOMO = -0.180836272289079  LUMO = -0.0491916573225175
cycle= 3 E= -552.880577088299  delta_E= -0.625  |g|= 0.428  |ddm|= 1.17
  HOMO = -0.191759216630706  LUMO = -0.0488802764780526
cycle= 4 E= -552.915727614432  delta_E= -0.0352  |g|= 0.129  |ddm|= 0.279
  HOMO = -0.196570398978749  LUMO = -0.0543843673333738
cycle= 5 E= -552.918467328643  delta_E= -0.00274  |g|= 0.0357  |ddm|= 0.0861
  HOMO = -0.193092889519793  LUMO = -0.0512224411145603
cycle= 6 E= -552.918823837984  delta_E= -0.000357  |g|= 0.00713  |ddm|= 0.0332
  HOMO = -0.19382235827669  LUMO = -0.0518596320429938
cycle= 7 E= -552.918836639497  delta_E= -1.28e-05  |g|= 0.00198  |ddm|= 0.00601
  HOMO = -0.193850627909156  LUMO = -0.0519425468909642
cycle= 8 E= -552.918837388723  delta_E= -7.49e-07  |g|= 0.000516  |ddm|= 0.00119
  HOMO = -0.193805909827421  LUMO = -0.051919729536697
cycle= 9 E= -552.918837453995  delta_E= -6.53e-08  |g|= 0.000172  |ddm|= 0.000455
  HOMO = -0.193829520631625  LUMO = -0.0519380476725649
cycle= 10 E= -552.918837461058  delta_E= -7.06e-09  |g|= 2.84e-05  |ddm|= 0.000138
  HOMO = -0.193826857162904  LUMO = -0.0519349494783377
cycle= 11 E= -552.918837461222  delta_E= -1.64e-10  |g|= 8.4e-06  |ddm|= 2.89e-05
  HOMO = -0.19382787309929  LUMO = -0.0519355109530179
Extra cycle  E= -552.918837461207  delta_E= 1.42e-11  |g|= 1.18e-05  |ddm|= 1.43e-05
converged SCF energy = -552.918837461207
Electronic spatial extent <R**2> (au): 4936.3337
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): -980.3402, 515.2725, 37.3716
Nuclear Dipole moment(X, Y, Z, Debye): -979.1728, 515.5024, 35.8610
Total Dipole moment(X, Y, Z, Debye): 1.1673, 0.2299, -1.5107
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -41.0994, -32.8521, -32.9859
Total Quadrupole moments (XY, XZ, YZ): 2.3606, 10.0594, -4.5826
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): 515.5510, -252.6124, -21.6362, 168.6470
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -104.9890, -67.9113, 159.2266, -83.2810
Total Octupole moments (YYZ, XYZ): -18.7376, 29.8416
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -5017.4794, -1373.6037, -203.9893, 1334.9589
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): 406.2466, 1255.3578, -57.8283, 51.1117
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): -35.0586, -1121.1874, -843.9091, -256.1891
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): -193.8382, 97.2975, 402.4816
