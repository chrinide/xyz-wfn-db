#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/hf/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = scf.RHF(mol) 
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Wed Jun 27 21:21:01 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 18
[INPUT] num. electrons = 72
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C      2.807928000000  -0.671266000000   0.110925000000 AA    5.306214897498  -1.268508896732   0.209617870367 Bohr
[INPUT]  2 C     -2.833023000000  -0.669549000000   0.005942000000 AA   -5.353637574594  -1.265264236976   0.011228752632 Bohr
[INPUT]  3 C      2.808466000000   0.669256000000   0.109405000000 AA    5.307231570153   1.264710547222   0.206745486658 Bohr
[INPUT]  4 C     -2.832481000000   0.671845000000   0.004432000000 AA   -5.352613343034   1.269603048158   0.008375266184 Bohr
[INPUT]  5 N      1.481931000000  -1.164250000000   0.047906000000 AA    2.800443725503  -2.200113640525   0.090529219723 Bohr
[INPUT]  6 N     -1.510128000000  -1.148214000000  -0.127737000000 AA   -2.853728333037  -2.169809992391  -0.241387945974 Bohr
[INPUT]  7 N      1.482866000000   1.163160000000   0.045259000000 AA    2.802210619429   2.198053839049   0.085527114672 Bohr
[INPUT]  8 N     -1.509202000000   1.149140000000  -0.130328000000 AA   -2.851978446646   2.171559878783  -0.246284226362 Bohr
[INPUT]  9 C      0.661369000000  -0.000324000000  -0.049885000000 AA    1.249806277277  -0.000612271264  -0.094268987724 Bohr
[INPUT] 10 C     -0.678727000000   0.000198000000  -0.065727000000 AA   -1.282608143348   0.000374165773  -0.124206028989 Bohr
[INPUT] 11 H      1.321297000000  -1.860797000000  -0.678448000000 AA    2.496889459209  -3.516396703412  -1.282080909759 Bohr
[INPUT] 12 H     -1.233818000000  -1.908249000000   0.489167000000 AA   -2.331578107559  -3.606067987475   0.924391659175 Bohr
[INPUT] 13 H      1.322792000000   1.858182000000  -0.682677000000 AA    2.499714599766   3.511455069597  -1.290072561540 Bohr
[INPUT] 14 H     -1.232275000000   1.910342000000   0.484856000000 AA   -2.328662260148   3.610023184254   0.916245049852 Bohr
[INPUT] 15 H      3.646503000000  -1.350116000000   0.226882000000 AA    6.890891982405  -2.551349476393   0.428744842594 Bohr
[INPUT] 16 H     -3.676088000000  -1.351784000000  -0.005373000000 AA   -6.946799529800  -2.554501539569  -0.010153498467 Bohr
[INPUT] 17 H      3.647586000000   1.347694000000   0.223821000000 AA    6.892938555798   2.546772559720   0.422960390926 Bohr
[INPUT] 18 H     -3.674996000000   1.354732000000  -0.008419000000 AA   -6.944735948872   2.560072452184  -0.015909604243 Bohr

nuclear repulsion = 507.754595781021
number of shells = 202
number of NR pGTOs = 780
number of NR cGTOs = 644
basis = aug-cc-pvtz
ecp = {}
CPU time:     43509.12


******** <class 'pyscf.scf.hf.RHF'> flags ********
method = RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = bi-nhc.chk
max_memory 10000 MB (current use 161 MB)
Set gradient conv threshold to 3.16228e-05
init E= -453.389017869565
  HOMO = -0.0917565509736191  LUMO = 0.0193565580150022
cycle= 1 E= -449.610558514446  delta_E= 3.78  |g|= 0.573  |ddm|= 7.24
  HOMO = -0.219170307193788  LUMO = 0.0269659256852822
cycle= 2 E= -449.714484508443  delta_E= -0.104  |g|= 0.178  |ddm|= 2.24
  HOMO = -0.214376941761432  LUMO = 0.0280252946595602
cycle= 3 E= -449.723681557057  delta_E= -0.0092  |g|= 0.0779  |ddm|= 0.621
  HOMO = -0.219364430266583  LUMO = 0.0279988542472457
cycle= 4 E= -449.725461688579  delta_E= -0.00178  |g|= 0.0194  |ddm|= 0.202
  HOMO = -0.219058659406427  LUMO = 0.0280019000212255
cycle= 5 E= -449.725622524402  delta_E= -0.000161  |g|= 0.00576  |ddm|= 0.0548
  HOMO = -0.219844283508515  LUMO = 0.0280091380100789
cycle= 6 E= -449.725650001145  delta_E= -2.75e-05  |g|= 0.00233  |ddm|= 0.0318
  HOMO = -0.219877126058795  LUMO = 0.028012291479824
cycle= 7 E= -449.725653862957  delta_E= -3.86e-06  |g|= 0.00102  |ddm|= 0.0104
  HOMO = -0.219911473014605  LUMO = 0.0280121634634505
cycle= 8 E= -449.72565439813  delta_E= -5.35e-07  |g|= 0.000231  |ddm|= 0.0069
  HOMO = -0.219941050043398  LUMO = 0.0280119262330729
cycle= 9 E= -449.72565443794  delta_E= -3.98e-08  |g|= 8.36e-05  |ddm|= 0.00406
  HOMO = -0.219929016116293  LUMO = 0.0280122290709398
cycle= 10 E= -449.725654442406  delta_E= -4.47e-09  |g|= 2.46e-05  |ddm|= 0.00132
  HOMO = -0.219929078088252  LUMO = 0.0280121730681038
cycle= 11 E= -449.725654443218  delta_E= -8.12e-10  |g|= 6.8e-06  |ddm|= 0.000565
  HOMO = -0.219928206539606  LUMO = 0.0280121871915036
Extra cycle  E= -449.725654443253  delta_E= -3.49e-11  |g|= 3.23e-06  |ddm|= 6.39e-05
converged SCF energy = -449.725654443253
Electronic spatial extent <R**2> (au): 1519.2072
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): -3.2155, -0.0008, -1.9022
Nuclear Dipole moment(X, Y, Z, Debye): -3.1679, -0.0009, -1.9882
Total Dipole moment(X, Y, Z, Debye): 0.0476, -0.0001, -0.0860
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -51.1243, -51.0615, -63.9884
Total Quadrupole moments (XY, XZ, YZ): -0.0045, -4.0384, -0.0130
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): 0.9576, -0.0010, -0.4152, -0.1500
Total Octupole moments (XXY, XXZ, XZZ, YZZ): 0.0026, 2.7586, 2.3234, -0.0006
Total Octupole moments (YYZ, XYZ): -0.2862, 0.0015
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -1483.5868, -336.3003, -82.1976, 0.2629
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): -2.1974, 0.1044, 0.1541, -20.5599
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): 0.1748, -274.9652, -329.3778, -76.4467
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): -0.0824, -27.2456, 0.1403
