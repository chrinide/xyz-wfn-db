#INFO: **** input file is /home/jluis/src/git/db/tms-wfn/hf/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../tms/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = scf.RHF(mol) 
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'cromo', '4.9.0-0.bpo.3-amd64', '#1 SMP Debian 4.9.30-2+deb9u5~bpo8+1 (2017-09-28)', 'x86_64', '')  Threads 4
Python 2.7.14 (default, Apr 10 2018, 19:21:27) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Sun Jul  1 19:51:51 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD 1ca9fa9a79cffe36c02a6597649cc8e4258362c9
GIT HEAD      ref: refs/heads/master
GIT master branch  2a04e98fd7e076282a2b183302d17fc6af3d78e6

[ENV] PYSCF_MAX_MEMORY 32000
[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 4
[INPUT] num. electrons = 90
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 Ti     0.000549000000   0.176600000000   0.000000000000 AA    0.001037459642   0.333725633598   0.000000000000 Bohr
[INPUT]  2 Se    -0.001974000000   2.356914000000   0.000000000000 AA   -0.003730319370   4.453921959153   0.000000000000 Bohr
[INPUT]  3 Cl     0.000272000000  -0.809532000000   1.967381000000 AA    0.000514005506  -1.529793769071   3.717811272673 Bohr
[INPUT]  4 Cl     0.000272000000  -0.809532000000  -1.967381000000 AA    0.000514005506  -1.529793769071  -3.717811272673 Bohr

nuclear repulsion = 564.371597541175
number of shells = 54
number of NR pGTOs = 433
number of NR cGTOs = 252
basis = aug-cc-pvtz
ecp = {}
CPU time:      9380.16


******** <class 'pyscf.scf.hf.RHF'> flags ********
method = RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = ticl2se.chk
max_memory 10000 MB (current use 152 MB)
Set gradient conv threshold to 3.16228e-05
init E= -4166.58994782875
  HOMO = -0.321886518771368  LUMO = -0.0628782703983521
cycle= 1 E= -4167.0865759953  delta_E= -0.497  |g|= 1.12  |ddm|= 3.86
  HOMO = -0.423488550092964  LUMO = -0.417665831449468
cycle= 2 E= -4162.50771295655  delta_E= 4.58  |g|= 5.55  |ddm|= 13.3
  HOMO = -0.363211898323168  LUMO = -0.164295925116262
cycle= 3 E= -4167.36484557192  delta_E= -4.86  |g|= 0.774  |ddm|= 8.49
  HOMO = -0.357622078236408  LUMO = -0.0365663188712525
cycle= 4 E= -4167.48878893563  delta_E= -0.124  |g|= 0.159  |ddm|= 0.915
  HOMO = -0.365944729323689  LUMO = -0.0186775368653497
cycle= 5 E= -4167.49492152013  delta_E= -0.00613  |g|= 0.0247  |ddm|= 0.762
  HOMO = -0.360948685441087  LUMO = -0.0189852110869127
cycle= 6 E= -4167.49526230295  delta_E= -0.000341  |g|= 0.0105  |ddm|= 0.0778
  HOMO = -0.362055540391544  LUMO = -0.0202318215118579
cycle= 7 E= -4167.49543578718  delta_E= -0.000173  |g|= 0.00718  |ddm|= 0.0385
  HOMO = -0.362158321001762  LUMO = -0.0200822559027609
cycle= 8 E= -4167.49552210541  delta_E= -8.63e-05  |g|= 0.00481  |ddm|= 0.0477
  HOMO = -0.362778733555857  LUMO = -0.0196045448716651
cycle= 9 E= -4167.49557148914  delta_E= -4.94e-05  |g|= 0.00153  |ddm|= 0.035
  HOMO = -0.362825996789265  LUMO = -0.019495831216946
cycle= 10 E= -4167.49557875396  delta_E= -7.26e-06  |g|= 0.00116  |ddm|= 0.00968
  HOMO = -0.362958570621311  LUMO = -0.0193240443290308
cycle= 11 E= -4167.4955811728  delta_E= -2.42e-06  |g|= 0.00058  |ddm|= 0.00568
  HOMO = -0.362987066346925  LUMO = -0.0192184259594692
cycle= 12 E= -4167.49558217755  delta_E= -1e-06  |g|= 0.000448  |ddm|= 0.00289
  HOMO = -0.363034192747487  LUMO = -0.019134126782275
cycle= 13 E= -4167.49558296661  delta_E= -7.89e-07  |g|= 0.000283  |ddm|= 0.00328
  HOMO = -0.363071034429927  LUMO = -0.0190286547258815
cycle= 14 E= -4167.49558339449  delta_E= -4.28e-07  |g|= 0.000131  |ddm|= 0.00365
  HOMO = -0.363074443003991  LUMO = -0.0190055804932662
cycle= 15 E= -4167.495583453  delta_E= -5.85e-08  |g|= 5.64e-05  |ddm|= 0.0013
  HOMO = -0.363081315487643  LUMO = -0.0189999784201417
cycle= 16 E= -4167.49558346197  delta_E= -8.97e-09  |g|= 2.79e-05  |ddm|= 0.000405
  HOMO = -0.363079751004019  LUMO = -0.0189958968841931
cycle= 17 E= -4167.49558346396  delta_E= -1.99e-09  |g|= 1.28e-05  |ddm|= 0.000229
  HOMO = -0.363081527634574  LUMO = -0.0189970461306662
cycle= 18 E= -4167.49558346422  delta_E= -2.56e-10  |g|= 7.65e-06  |ddm|= 4.97e-05
  HOMO = -0.363081348355535  LUMO = -0.01899579687648
Extra cycle  E= -4167.49558346426  delta_E= -4.55e-11  |g|= 6.55e-06  |ddm|= 6.81e-05
converged SCF energy = -4167.49558346426
Electronic spatial extent <R**2> (au): 1370.9612
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): -0.2263, 272.5590, -0.0000
Nuclear Dipole moment(X, Y, Z, Debye): -0.2199, 271.3627, 0.0000
Total Dipole moment(X, Y, Z, Debye): 0.0063, -1.1963, 0.0000
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -57.8204, -67.9692, -68.5905
Total Quadrupole moments (XY, XZ, YZ): 0.0073, 0.0000, 0.0000
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): 0.0768, -87.9655, 0.0000, 0.0276
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -26.9814, 0.0000, 0.0192, -25.3588
Total Octupole moments (YYZ, XYZ): 0.0000, 0.0000
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -74.2037, -828.9118, -686.1178, 0.2750
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): 0.0000, 0.2935, -0.0000, -0.0000
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): 0.0000, -148.7492, -127.6680, -254.9928
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): 0.0000, -0.0000, 0.0989
