#INFO: **** input file is /home/jluis/src/git/db/tms-wfn/hf/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../tms/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = scf.RHF(mol) 
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'cromo', '4.9.0-0.bpo.3-amd64', '#1 SMP Debian 4.9.30-2+deb9u5~bpo8+1 (2017-09-28)', 'x86_64', '')  Threads 4
Python 2.7.14 (default, Apr 10 2018, 19:21:27) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Sun Jul  1 20:02:35 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD 1ca9fa9a79cffe36c02a6597649cc8e4258362c9
GIT HEAD      ref: refs/heads/master
GIT master branch  2a04e98fd7e076282a2b183302d17fc6af3d78e6

[ENV] PYSCF_MAX_MEMORY 32000
[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 4
[INPUT] num. electrons = 100
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 Ti    -0.085025000000   0.129792000000   0.000000000000 AA   -0.160673963741   0.245271333160   0.000000000000 Bohr
[INPUT]  2 O     -0.481172000000   1.657770000000   0.000000000000 AA   -0.909283298809   3.132731277520   0.000000000000 Bohr
[INPUT]  3 Br     0.175433000000  -0.857241000000   2.142109000000 AA    0.331520323211  -1.619950712748   4.047999338966 Bohr
[INPUT]  4 Br     0.175433000000  -0.857241000000  -2.142109000000 AA    0.331520323211  -1.619950712748  -4.047999338966 Bohr

nuclear repulsion = 641.724057139222
number of shells = 55
number of NR pGTOs = 468
number of NR cGTOs = 257
basis = aug-cc-pvtz
ecp = {}
CPU time:     11935.47


******** <class 'pyscf.scf.hf.RHF'> flags ********
method = RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = tibr2o.chk
max_memory 10000 MB (current use 172 MB)
Set gradient conv threshold to 3.16228e-05
init E= -6066.07874633182
  HOMO = -0.412027707438774  LUMO = -0.0731959286509857
cycle= 1 E= -6067.93924808806  delta_E= -1.86  |g|= 1.39  |ddm|= 4.24
  HOMO = -0.405057890989376  LUMO = -0.308811368985045
cycle= 2 E= -6065.46481347247  delta_E= 2.47  |g|= 4.37  |ddm|= 12.1
  HOMO = -0.423756681045184  LUMO = -0.0670723574399187
cycle= 3 E= -6068.36958804503  delta_E= -2.9  |g|= 0.395  |ddm|= 8.54
  HOMO = -0.432014899458179  LUMO = -0.0297778213967768
cycle= 4 E= -6068.39673385928  delta_E= -0.0271  |g|= 0.0727  |ddm|= 0.359
  HOMO = -0.429830623231004  LUMO = -0.0146943253288247
cycle= 5 E= -6068.39805597727  delta_E= -0.00132  |g|= 0.0212  |ddm|= 0.577
  HOMO = -0.42922025298326  LUMO = -0.0175968537684552
cycle= 6 E= -6068.39827019558  delta_E= -0.000214  |g|= 0.00905  |ddm|= 0.0498
  HOMO = -0.429772898114767  LUMO = -0.0177081564007633
cycle= 7 E= -6068.3983364688  delta_E= -6.63e-05  |g|= 0.00503  |ddm|= 0.0252
  HOMO = -0.429823879492858  LUMO = -0.0178628990965535
cycle= 8 E= -6068.39837278732  delta_E= -3.63e-05  |g|= 0.00274  |ddm|= 0.0315
  HOMO = -0.429920790879212  LUMO = -0.0177449661744476
cycle= 9 E= -6068.39838287188  delta_E= -1.01e-05  |g|= 0.00101  |ddm|= 0.0143
  HOMO = -0.429871353650309  LUMO = -0.0177654363895786
cycle= 10 E= -6068.39838400233  delta_E= -1.13e-06  |g|= 0.000436  |ddm|= 0.00341
  HOMO = -0.429889924419306  LUMO = -0.0177659407320443
cycle= 11 E= -6068.39838424562  delta_E= -2.43e-07  |g|= 0.00016  |ddm|= 0.00175
  HOMO = -0.429874232228607  LUMO = -0.0177642394483125
cycle= 12 E= -6068.39838428606  delta_E= -4.04e-08  |g|= 8.66e-05  |ddm|= 0.000514
  HOMO = -0.429877035110271  LUMO = -0.0177722212576797
cycle= 13 E= -6068.3983843004  delta_E= -1.43e-08  |g|= 3.7e-05  |ddm|= 0.00034
  HOMO = -0.42987564630207  LUMO = -0.0177693594213971
cycle= 14 E= -6068.39838430254  delta_E= -2.13e-09  |g|= 1.51e-05  |ddm|= 0.000253
  HOMO = -0.429875805982358  LUMO = -0.0177720618089138
cycle= 15 E= -6068.39838430269  delta_E= -1.58e-10  |g|= 5.47e-06  |ddm|= 0.000114
  HOMO = -0.429875844581934  LUMO = -0.0177710820117829
Extra cycle  E= -6068.39838430272  delta_E= -2.18e-11  |g|= 3.33e-06  |ddm|= 3.53e-05
converged SCF energy = -6068.39838430272
Electronic spatial extent <R**2> (au): 1565.9673
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): 31.3050, -209.9476, -0.0000
Nuclear Dipole moment(X, Y, Z, Debye): 31.5109, -210.8092, 0.0000
Total Dipole moment(X, Y, Z, Debye): 0.2059, -0.8616, 0.0000
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -56.0612, -66.2145, -66.7262
Total Quadrupole moments (XY, XZ, YZ): 2.8822, 0.0000, -0.0000
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): -8.8806, 55.4466, 0.0000, 0.2975
Total Octupole moments (XXY, XXZ, XZZ, YZZ): 21.0578, 0.0000, -3.0651, 24.3380
Total Octupole moments (YYZ, XYZ): -0.0000, 0.0000
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -81.9768, -355.0002, -1104.0479, 33.1392
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): 0.0000, 36.8960, -0.0000, 0.0000
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): -0.0000, -71.7542, -199.9593, -240.1840
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): -0.0000, -0.0000, 9.9385
