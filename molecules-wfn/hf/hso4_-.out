#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/hf/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = scf.RHF(mol) 
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Wed Jun 27 21:39:23 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 6
[INPUT] num. electrons = 50
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 S     -1.383194000000   1.088908000000  -0.184935000000 AA   -2.613857837142   2.057737894848  -0.349476500846 Bohr
[INPUT]  2 O     -0.080870000000   1.005354000000  -0.926975000000 AA   -0.152822151694   1.899843718236  -1.751728874319 Bohr
[INPUT]  3 O     -1.491984000000   2.218312000000   0.778739000000 AA   -2.819441142233   4.192002138836   1.471603432518 Bohr
[INPUT]  4 O     -1.295872000000  -0.296052000000   0.813123000000 AA   -2.448843172492  -0.559457198630   1.536579775585 Bohr
[INPUT]  5 O     -2.597536000000   0.861901000000  -1.016188000000 AA   -4.908631638698   1.628756836489  -1.920317011070 Bohr
[INPUT]  6 H     -0.455664000000  -0.680603000000   0.536227000000 AA   -0.861080164824  -1.286153269557   1.013322170597 Bohr

nuclear repulsion = 269.527190983476
number of shells = 74
number of NR pGTOs = 332
number of NR cGTOs = 257
basis = aug-cc-pvtz
ecp = {}
CPU time:     56633.20


******** <class 'pyscf.scf.hf.RHF'> flags ********
method = RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = hso4_-.chk
max_memory 10000 MB (current use 160 MB)
Set gradient conv threshold to 3.16228e-05
init E= -698.669031746933
  HOMO = -0.427575462528183  LUMO = 0.0194688076726002
cycle= 1 E= -697.506439365628  delta_E= 1.16  |g|=  1.1  |ddm|= 1.93
  HOMO = -0.192147829250583  LUMO = 0.13174658659949
cycle= 2 E= -697.617387975778  delta_E= -0.111  |g|= 0.802  |ddm|= 0.971
  HOMO = -0.250526742069438  LUMO = 0.136069907835457
cycle= 3 E= -697.722067070363  delta_E= -0.105  |g|= 0.0606  |ddm|= 0.391
  HOMO = -0.255117231691206  LUMO = 0.13733668695731
cycle= 4 E= -697.72306258482  delta_E= -0.000996  |g|= 0.0255  |ddm|= 0.0775
  HOMO = -0.256703398872957  LUMO = 0.137328386881744
cycle= 5 E= -697.723195302347  delta_E= -0.000133  |g|= 0.00768  |ddm|= 0.0186
  HOMO = -0.256291851255636  LUMO = 0.137173783252497
cycle= 6 E= -697.723209917709  delta_E= -1.46e-05  |g|= 0.00158  |ddm|= 0.00558
  HOMO = -0.256597776191619  LUMO = 0.13718084203414
cycle= 7 E= -697.723211366237  delta_E= -1.45e-06  |g|= 0.000468  |ddm|= 0.00224
  HOMO = -0.256525855179918  LUMO = 0.137178819714601
cycle= 8 E= -697.72321147894  delta_E= -1.13e-07  |g|= 0.00015  |ddm|= 0.000722
  HOMO = -0.256570693884867  LUMO = 0.137179398495361
cycle= 9 E= -697.723211486603  delta_E= -7.66e-09  |g|= 3.1e-05  |ddm|= 0.000157
  HOMO = -0.256568491297159  LUMO = 0.137179701238019
cycle= 10 E= -697.723211487002  delta_E= -4e-10  |g|= 1.37e-05  |ddm|= 5.42e-05
  HOMO = -0.25656897356676  LUMO = 0.137179603032008
Extra cycle  E= -697.723211487027  delta_E= -2.43e-11  |g|= 1.07e-05  |ddm|= 1.32e-05
converged SCF energy = -697.723211487027
Electronic spatial extent <R**2> (au): 881.8482
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): -326.3625, 232.8148, -26.4034
Nuclear Dipole moment(X, Y, Z, Debye): -318.5334, 226.0294, -25.1358
Total Dipole moment(X, Y, Z, Debye): 7.8291, -6.7854, 1.2675
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -56.3501, -48.8100, -44.7389
Total Quadrupole moments (XY, XZ, YZ): 7.7830, -0.9297, -0.7951
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): 198.7284, -135.2718, 14.9067, 67.8356
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -54.2611, 14.5075, 61.4211, -43.2571
Total Octupole moments (YYZ, XYZ): -3.7355, 1.3918
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -687.5724, -430.9672, -164.9184, 195.4974
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): -57.2520, 188.4310, -10.1601, -22.0275
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): 15.5788, -190.1517, -144.0369, -98.6489
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): 9.9304, 7.4834, 59.8216
