#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/m06-l/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = dft.RKS(mol) 
    mf.grids.level = 4
    mf.xc = 'm06-l'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)

#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Thu Jun 28 19:56:26 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 7
[INPUT] num. electrons = 62
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C     -2.995477000000   0.194325000000   0.033615000000 AA   -5.660631142434   0.367221029156   0.063523143677 Bohr
[INPUT]  2 C     -2.091830000000   1.190779000000   0.000686000000 AA   -3.952985799149   2.250246184883   0.001296352121 Bohr
[INPUT]  3 H     -4.077966000000   0.372480000000   0.033162000000 AA   -7.706238885288   0.703885186878   0.062667097743 Bohr
[INPUT]  4 H     -2.710445000000  -0.863038000000   0.063131000000 AA   -5.121998725697  -1.630905455092   0.119300299970 Bohr
[INPUT]  5 Mg    -0.057100000000   0.847438000000  -0.000408000000 AA   -0.107903361713   1.601425727549  -0.000771008259 Bohr
[INPUT]  6 H     -2.522111000000   2.202483000000  -0.026763000000 AA   -4.766099045753   4.162089664010  -0.050574740272 Bohr
[INPUT]  7 Br     2.263049000000   0.422194000000  -0.003302000000 AA    4.276542816471   0.797831031435  -0.006239875663 Bohr

nuclear repulsion = 215.589563848246
number of shells = 80
number of NR pGTOs = 396
number of NR cGTOs = 270
basis = aug-cc-pvtz
ecp = {}
CPU time:    148525.12


******** <class 'pyscf.dft.rks.RKS'> flags ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = c2h3mgbr.chk
max_memory 10000 MB (current use 225 MB)
XC functionals = m06-l
small_rho_cutoff = 1e-07
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function nwchem_prune at 0x2b99180735f0>
grids dens level: 4
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b9918073500>
Set gradient conv threshold to 3.16228e-05
tot grids = 162232
init E= -2851.3043226775
  HOMO = -0.310388388714746  LUMO = -0.146635518101637
cycle= 1 E= -2852.08471424679  delta_E= -0.78  |g|= 0.773  |ddm|= 5.81
  HOMO = -0.0949969397088478  LUMO = -0.0141294794751547
cycle= 2 E= -2851.81254552159  delta_E= 0.272  |g|= 1.19  |ddm|= 4.53
  HOMO = -0.236913395365882  LUMO = -0.0434318461463626
cycle= 3 E= -2852.24796605387  delta_E= -0.435  |g|= 0.0918  |ddm|= 2.28
  HOMO = -0.230711904561493  LUMO = -0.0405313545172031
cycle= 4 E= -2852.24821364395  delta_E= -0.000248  |g|= 0.0947  |ddm|= 2.45
  HOMO = -0.235267781742118  LUMO = -0.0412789965655329
cycle= 5 E= -2852.250567011  delta_E= -0.00235  |g|= 0.0205  |ddm|= 0.505
  HOMO = -0.237033126926707  LUMO = -0.043543747444119
cycle= 6 E= -2852.25067361911  delta_E= -0.000107  |g|= 0.0131  |ddm|= 0.254
  HOMO = -0.237646582612377  LUMO = -0.0442220130009478
cycle= 7 E= -2852.25071102386  delta_E= -3.74e-05  |g|= 0.00404  |ddm|= 0.127
  HOMO = -0.238030402331564  LUMO = -0.0448265100841643
cycle= 8 E= -2852.25071552881  delta_E= -4.5e-06  |g|= 0.00126  |ddm|= 0.0828
  HOMO = -0.238013601357754  LUMO = -0.0449124881074705
cycle= 9 E= -2852.25071627608  delta_E= -7.47e-07  |g|= 0.000567  |ddm|= 0.0338
  HOMO = -0.23806210557028  LUMO = -0.0450216583635048
cycle= 10 E= -2852.25071650513  delta_E= -2.29e-07  |g|= 0.000212  |ddm|= 0.0259
  HOMO = -0.238082746869695  LUMO = -0.0450641232944088
cycle= 11 E= -2852.25071654315  delta_E= -3.8e-08  |g|= 6.26e-05  |ddm|= 0.0126
  HOMO = -0.238080314769434  LUMO = -0.0450654077256968
cycle= 12 E= -2852.25071654534  delta_E= -2.19e-09  |g|= 3.74e-05  |ddm|= 0.00243
  HOMO = -0.238084004591302  LUMO = -0.0450684409297556
cycle= 13 E= -2852.25071654577  delta_E= -4.31e-10  |g|= 1.42e-05  |ddm|= 0.000488
  HOMO = -0.238083439411934  LUMO = -0.0450667714521144
Extra cycle  E= -2852.25071654586  delta_E= -8.46e-11  |g|= 1.09e-05  |ddm|= 0.000232
converged SCF energy = -2852.25071654586
Electronic spatial extent <R**2> (au): 1237.3170
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): 187.5494, 167.5156, 0.7426
Nuclear Dipole moment(X, Y, Z, Debye): 185.8223, 167.9613, 0.7439
Total Dipole moment(X, Y, Z, Debye): -1.7272, 0.4457, 0.0013
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -51.8490, -38.3729, -41.5243
Total Quadrupole moments (XY, XZ, YZ): 0.5361, 0.0118, -0.0820
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): -34.3303, -67.2858, -0.6092, -9.0130
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -32.0688, -0.1165, -4.3380, -24.2894
Total Octupole moments (YYZ, XYZ): -0.2651, 0.2008
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -1198.0033, -170.1269, -55.4376, -0.6565
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): 2.3434, 5.9083, -0.0824, 2.8956
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): 0.0888, -236.9489, -226.9900, -39.6441
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): -0.3943, 1.1003, 5.3963
