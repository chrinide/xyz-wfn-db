#INFO: **** input file is /home/jluis/src/git/db/s22-wfn/vv10/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../s22/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-4]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.verbose = 4
    mol.build()

    mf = dft.RKS(mol)#.density_fit() 
    #mf.with_df.auxbasis = 'aug-cc-pvtz-jkfit'
    #mf.xc = 'rpw86,pbe'
    mf.xc = 'vv10'
    mf.grids.level = 4
    mf.nlc = 'vv10'
    mf.nlcgrids.level = 2
    mf.nlcgrids.prune = dft.gen_grid.sg1_prune
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  xcdft 0 0 0\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)

#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Tue Jul  3 02:25:26 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 16
[INPUT] num. electrons = 52
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C     -0.739281000000   0.515879000000  -1.207108000000 AA   -1.397038619095   0.974870023414  -2.281103522771 Bohr
[INPUT]  2 C     -1.426144000000   0.396545000000   0.000000000000 AA   -2.695021574192   0.749361446066   0.000000000000 Bohr
[INPUT]  3 C     -0.739281000000   0.515879000000   1.207108000000 AA   -1.397038619095   0.974870023414   2.281103522771 Bohr
[INPUT]  4 C      0.634227000000   0.754640000000   1.207073000000 AA    1.198515330805   1.426062922642   2.281037382357 Bohr
[INPUT]  5 C      1.321043000000   0.873757000000   0.000000000000 AA    2.496409468774   1.651161429422   0.000000000000 Bohr
[INPUT]  6 C      0.634227000000   0.754640000000  -1.207073000000 AA    1.198515330805   1.426062922642  -2.281037382357 Bohr
[INPUT]  7 H     -1.271950000000   0.420632000000  -2.143289000000 AA   -2.403637144141   0.794879279228  -4.050229215793 Bohr
[INPUT]  8 H     -2.490220000000   0.205238000000   0.000000000000 AA   -4.705833789914   0.387843610353   0.000000000000 Bohr
[INPUT]  9 H     -1.271950000000   0.420632000000   2.143289000000 AA   -2.403637144141   0.794879279228   4.050229215793 Bohr
[INPUT] 10 H      1.166800000000   0.847488000000   2.143695000000 AA    2.204932442143   1.601520213855   4.050996444600 Bohr
[INPUT] 11 H      2.386359000000   1.059631000000   0.000000000000 AA    4.509564944891   2.002412383099   0.000000000000 Bohr
[INPUT] 12 H      1.166800000000   0.847488000000  -2.143695000000 AA    2.204932442143   1.601520213855  -4.050996444600 Bohr
[INPUT] 13 N      0.180393000000  -2.949123000000   0.000000000000 AA    0.340893364789  -5.573034777656   0.000000000000 Bohr
[INPUT] 14 H      0.759549000000  -3.145948000000  -0.806073000000 AA    1.435339588187  -5.944980122123  -1.523257206407 Bohr
[INPUT] 15 H      0.759549000000  -3.145948000000   0.806073000000 AA    1.435339588187  -5.944980122123   1.523257206407 Bohr
[INPUT] 16 H      0.044417000000  -1.944940000000   0.000000000000 AA    0.083935965275  -3.675403928712   0.000000000000 Bohr

nuclear repulsion = 273.279637472188
number of shells = 172
number of NR pGTOs = 631
number of NR cGTOs = 529
basis = aug-cc-pvtz
ecp = {}
CPU time:    177342.03


******** <class 'pyscf.dft.rks.RKS'> flags ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = c6h6_nh3.chk
max_memory 64000 MB (current use 368 MB)
XC functionals = vv10
NLC functional = vv10
small_rho_cutoff = 1e-07
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function nwchem_prune at 0x2b76d4a885f0>
grids dens level: 4
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b76d4a88500>
** Following is NLC Grids **
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function sg1_prune at 0x2b76d4a88578>
grids dens level: 2
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b76d4a88500>
Set gradient conv threshold to 3.16228e-05
tot grids = 342360
tot grids = 67436
init E= -290.043287636354
  HOMO = -0.32715443753344  LUMO = -0.169114211360103
cycle= 1 E= -289.077495189251  delta_E= 0.966  |g|= 1.09  |ddm|= 10.5
  HOMO = -0.0814054902872278  LUMO = -0.0030486879539552
cycle= 2 E= -288.517981577459  delta_E= 0.56  |g|= 1.81  |ddm|= 3.37
  HOMO = -0.230511378558094  LUMO = -0.0495998094212702
cycle= 3 E= -289.365408860834  delta_E= -0.847  |g|= 0.122  |ddm|= 2.27
  HOMO = -0.210742220596805  LUMO = -0.0541841401565598
cycle= 4 E= -289.367396690904  delta_E= -0.00199  |g|= 0.0757  |ddm|= 0.208
  HOMO = -0.219507813503724  LUMO = -0.0512074264806926
cycle= 5 E= -289.368464152311  delta_E= -0.00107  |g|= 0.0312  |ddm|= 0.0866
  HOMO = -0.218937452365919  LUMO = -0.0512037692462568
cycle= 6 E= -289.368694817683  delta_E= -0.000231  |g|= 0.0115  |ddm|= 0.0359
  HOMO = -0.218097707857636  LUMO = -0.0515027534320951
cycle= 7 E= -289.368729619786  delta_E= -3.48e-05  |g|= 0.00166  |ddm|= 0.0102
  HOMO = -0.218351716772798  LUMO = -0.0515978209377297
cycle= 8 E= -289.368730225673  delta_E= -6.06e-07  |g|= 0.000381  |ddm|= 0.00276
  HOMO = -0.218381271152182  LUMO = -0.051624801318393
cycle= 9 E= -289.368730263995  delta_E= -3.83e-08  |g|= 5.37e-05  |ddm|= 0.000392
  HOMO = -0.218381871540284  LUMO = -0.0516282814685271
cycle= 10 E= -289.36873026462  delta_E= -6.25e-10  |g|= 1.58e-05  |ddm|= 0.000148
  HOMO = -0.218383486816901  LUMO = -0.0516273045560689
Extra cycle  E= -289.368730264566  delta_E= 5.41e-11  |g|= 2.16e-05  |ddm|= 3.93e-05
converged SCF energy = -289.368730264566
Electronic spatial extent <R**2> (au): 850.6196
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): 1.8120, -11.7219, -0.0000
Nuclear Dipole moment(X, Y, Z, Debye): 2.9821, -10.6225, 0.0000
Total Dipole moment(X, Y, Z, Debye): 1.1701, 1.0994, 0.0000
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -40.3599, -51.9044, -38.8048
Total Quadrupole moments (XY, XZ, YZ): -3.5395, -0.0000, 0.0000
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): -1.4993, 12.8231, 0.0000, 18.5762
Total Octupole moments (XXY, XXZ, XZZ, YZZ): 2.0655, 0.0000, 0.7351, -1.6226
Total Octupole moments (YYZ, XYZ): -0.0000, 0.0000
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -289.0863, -635.8488, -289.0755, 5.3615
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): 0.0000, -60.0812, 0.0000, -0.0000
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): -0.0000, -145.1424, -95.5990, -135.6368
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): 0.0000, -0.0000, -2.0994
