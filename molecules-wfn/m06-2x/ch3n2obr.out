#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/m06-2x/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = dft.RKS(mol) 
    mf.grids.level = 4
    mf.xc = 'm06-2x'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Thu Jun 28 03:48:34 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 8
[INPUT] num. electrons = 66
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C      1.550959000000  -0.070662000000   0.025818000000 AA    2.930887740429  -0.133531827414   0.048788949084 Bohr
[INPUT]  2 O      2.555218000000  -0.735863000000  -0.169482000000 AA    4.828662208559  -1.390579535201  -0.320274563044 Bohr
[INPUT]  3 N      1.516067000000   1.281425000000   0.045192000000 AA    2.864951416491   2.421542299171   0.085400503021 Bohr
[INPUT]  4 H      0.681167000000   1.800691000000   0.261825000000 AA    1.287219075092   3.402812824969   0.494777542564 Bohr
[INPUT]  5 H      2.393076000000   1.763000000000  -0.061497000000 AA    4.522258235270   3.331587157608  -0.116212487482 Bohr
[INPUT]  6 N      0.361563000000  -0.749292000000   0.336303000000 AA    0.683255046776  -1.415956667328   0.635520564870 Bohr
[INPUT]  7 Br    -1.311113000000   0.024022000000  -0.050882000000 AA   -2.477644488357   0.045395000964  -0.096153044670 Bohr
[INPUT]  8 H      0.395587000000  -1.687992000000  -0.050897000000 AA    0.747551088438  -3.189842580457  -0.096181390562 Bohr

nuclear repulsion = 321.289252475831
number of shells = 93
number of NR pGTOs = 434
number of NR cGTOs = 312
basis = aug-cc-pvtz
ecp = {}
CPU time:    104166.90


******** <class 'pyscf.dft.rks.RKS'> flags ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = ch3n2obr.chk
max_memory 10000 MB (current use 243 MB)
XC functionals = m06-2x
small_rho_cutoff = 1e-07
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function nwchem_prune at 0x2b19c47015f0>
grids dens level: 4
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b19c4701500>
Set gradient conv threshold to 3.16228e-05
tot grids = 192522
init E= -2798.69016812891
  HOMO = -0.278374687436403  LUMO = -0.0959694815790532
cycle= 1 E= -2798.74863689597  delta_E= -0.0585  |g|= 0.793  |ddm|= 2.89
  HOMO = -0.203691583410161  LUMO = -0.0736142654892154
cycle= 2 E= -2798.46947717704  delta_E= 0.279  |g|= 1.47  |ddm|= 1.17
  HOMO = -0.324135865265821  LUMO = -0.0401227046069404
cycle= 3 E= -2798.87671232325  delta_E= -0.407  |g|= 0.073  |ddm|= 0.739
  HOMO = -0.32973777324406  LUMO = -0.040158146185248
cycle= 4 E= -2798.87751278806  delta_E= -0.0008  |g|= 0.0478  |ddm|= 0.0932
  HOMO = -0.330352769265207  LUMO = -0.0393033536812295
cycle= 5 E= -2798.87796781659  delta_E= -0.000455  |g|= 0.0101  |ddm|= 0.0297
  HOMO = -0.329273671242562  LUMO = -0.0381826544057685
cycle= 6 E= -2798.8779994815  delta_E= -3.17e-05  |g|= 0.00401  |ddm|= 0.0117
  HOMO = -0.329582713990454  LUMO = -0.0383887989970053
cycle= 7 E= -2798.87800508068  delta_E= -5.6e-06  |g|= 0.0024  |ddm|= 0.00521
  HOMO = -0.329437813981748  LUMO = -0.0383187171989252
cycle= 8 E= -2798.87800673378  delta_E= -1.65e-06  |g|= 0.000586  |ddm|= 0.00259
  HOMO = -0.329466002362429  LUMO = -0.0383263196101956
cycle= 9 E= -2798.87800684269  delta_E= -1.09e-07  |g|= 0.000127  |ddm|= 0.000735
  HOMO = -0.329458587516914  LUMO = -0.0383168231997979
cycle= 10 E= -2798.87800684829  delta_E= -5.6e-09  |g|= 2.86e-05  |ddm|= 0.000153
  HOMO = -0.329458790399007  LUMO = -0.0383188759268667
cycle= 11 E= -2798.87800684877  delta_E= -4.82e-10  |g|= 9.93e-06  |ddm|= 4.56e-05
  HOMO = -0.329458766400631  LUMO = -0.0383188215480891
Extra cycle  E= -2798.87800684883  delta_E= -5.5e-11  |g|= 7.89e-06  |ddm|= 1.91e-05
converged SCF energy = -2798.87800684883
Electronic spatial extent <R**2> (au): 739.0979
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): 4.2730, -1.6185, -0.6628
Nuclear Dipole moment(X, Y, Z, Debye): 2.2661, 0.6269, -0.7777
Total Dipole moment(X, Y, Z, Debye): -2.0069, 2.2455, -0.1149
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -47.9863, -35.7462, -43.9055
Total Quadrupole moments (XY, XZ, YZ): 6.4799, 0.9602, 0.9374
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): -58.7516, 5.0357, -1.9693, -6.0729
Total Octupole moments (XXY, XXZ, XZZ, YZZ): 22.6175, 0.6438, -11.5383, -0.3585
Total Octupole moments (YYZ, XYZ): -0.3666, -0.5287
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -674.9456, -134.4150, -53.7110, 51.5844
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): 8.6558, 17.3632, 3.7643, -0.3567
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): 1.2747, -122.5711, -117.4627, -39.5861
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): -4.3336, -0.1539, -1.3764
