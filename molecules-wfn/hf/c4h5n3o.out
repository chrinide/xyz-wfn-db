#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/hf/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = scf.RHF(mol) 
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Wed Jun 27 22:01:57 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 13
[INPUT] num. electrons = 58
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 H     -2.110614000000  -1.427031000000   0.000001000000 AA   -3.988482414673  -2.696697761264   0.000001889726 Bohr
[INPUT]  2 H     -0.174222000000  -2.802991000000   0.000001000000 AA   -0.329231864874  -5.296885319621   0.000001889726 Bohr
[INPUT]  3 H      2.071605000000  -1.659444000000   0.000000000000 AA    3.914766088280  -3.135894679053   0.000000000000 Bohr
[INPUT]  4 H      3.164002000000   0.560666000000   0.000000000000 AA    5.979097237576   1.059505187355   0.000000000000 Bohr
[INPUT]  5 H      2.234186000000   2.033471000000   0.000001000000 AA    4.221999651338   3.842703272245   0.000001889726 Bohr
[INPUT]  6 C     -0.065569000000  -1.718764000000   0.000000000000 AA   -0.123907452262  -3.247993232762   0.000000000000 Bohr
[INPUT]  7 C      1.141926000000  -1.096699000000   0.000000000000 AA    2.157927394520  -2.072460751084   0.000000000000 Bohr
[INPUT]  8 C      1.106500000000   0.340370000000   0.000000000000 AA    2.090981956831   0.643206081018   0.000000000000 Bohr
[INPUT]  9 C     -1.217186000000   0.428090000000  -0.000003000000 AA   -2.300148182655   0.808972856665  -0.000005669178 Bohr
[INPUT] 10 O     -2.299708000000   0.989648000000   0.000002000000 AA   -4.345818286471   1.870163679724   0.000003779452 Bohr
[INPUT] 11 N     -0.002851000000   1.053025000000   0.000000000000 AA   -0.005387609181   1.989928852320   0.000000000000 Bohr
[INPUT] 12 N     -1.200454000000  -0.988270000000  -0.000001000000 AA   -2.268529285139  -1.867559637124  -0.000001889726 Bohr
[INPUT] 13 N      2.273487000000   1.026382000000   0.000000000000 AA    4.296267777759   1.939580879183   0.000000000000 Bohr

nuclear repulsion = 356.769145993867
number of shells = 149
number of NR pGTOs = 589
number of NR cGTOs = 483
basis = aug-cc-pvtz
ecp = {}
CPU time:     72531.70


******** <class 'pyscf.scf.hf.RHF'> flags ********
method = RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = c4h5n3o.chk
max_memory 10000 MB (current use 165 MB)
Set gradient conv threshold to 3.16228e-05
init E= -395.386490359939
  HOMO = -0.23793137977749  LUMO = 0.00662133207682471
cycle= 1 E= -392.577519164613  delta_E= 2.81  |g|= 0.863  |ddm|= 5.38
  HOMO = -0.281780648225679  LUMO = 0.00558526152565577
cycle= 2 E= -392.689602919577  delta_E= -0.112  |g|= 0.641  |ddm|= 1.07
  HOMO = -0.341505161817721  LUMO = 0.0135323432599355
cycle= 3 E= -392.760399928063  delta_E= -0.0708  |g|= 0.139  |ddm|= 0.448
  HOMO = -0.344743769019412  LUMO = 0.0157549925692383
cycle= 4 E= -392.765234553545  delta_E= -0.00483  |g|= 0.0325  |ddm|= 0.135
  HOMO = -0.343052383871513  LUMO = 0.0154228600443188
cycle= 5 E= -392.765592757151  delta_E= -0.000358  |g|= 0.0132  |ddm|= 0.0369
  HOMO = -0.343569265975924  LUMO = 0.0154652849012087
cycle= 6 E= -392.765693240908  delta_E= -0.0001  |g|= 0.00536  |ddm|= 0.0201
  HOMO = -0.343704884090971  LUMO = 0.0155257073795221
cycle= 7 E= -392.765716126692  delta_E= -2.29e-05  |g|= 0.00195  |ddm|= 0.0108
  HOMO = -0.34358248296443  LUMO = 0.015581931999991
cycle= 8 E= -392.765718980851  delta_E= -2.85e-06  |g|= 0.00063  |ddm|= 0.00403
  HOMO = -0.343627788858313  LUMO = 0.0155840555587754
cycle= 9 E= -392.765719269106  delta_E= -2.88e-07  |g|= 0.000207  |ddm|= 0.00129
  HOMO = -0.343607545730835  LUMO = 0.0155849328192493
cycle= 10 E= -392.76571930118  delta_E= -3.21e-08  |g|= 8.63e-05  |ddm|= 0.000402
  HOMO = -0.343603779917476  LUMO = 0.0155860892067799
cycle= 11 E= -392.765719306407  delta_E= -5.23e-09  |g|= 3.14e-05  |ddm|= 0.000166
  HOMO = -0.343602284584049  LUMO = 0.0155857633782732
cycle= 12 E= -392.765719307197  delta_E= -7.91e-10  |g|= 9.04e-06  |ddm|= 7.54e-05
  HOMO = -0.343601983412712  LUMO = 0.0155857938259349
Extra cycle  E= -392.765719307252  delta_E= -5.45e-11  |g|= 4.82e-06  |ddm|= 1.68e-05
converged SCF energy = -392.765719307252
Electronic spatial extent <R**2> (au): 849.8343
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): -4.8641, 5.0134, -0.0000
Nuclear Dipole moment(X, Y, Z, Debye): 0.3487, -0.1067, -0.0000
Total Dipole moment(X, Y, Z, Debye): 5.2128, -5.1200, -0.0000
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -43.3627, -41.6707, -48.9518
Total Quadrupole moments (XY, XZ, YZ): 11.4104, 0.0000, -0.0000
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): 49.7140, -14.7205, 0.0000, 8.0396
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -12.3539, -0.0000, -5.0671, 2.2666
Total Octupole moments (YYZ, XYZ): 0.0000, 0.0000
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -592.3032, -329.2509, -50.8582, 59.9978
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): 0.0000, 34.0282, -0.0001, 0.0000
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): -0.0000, -152.1495, -127.2711, -79.9550
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): -0.0000, 0.0000, -3.2257
