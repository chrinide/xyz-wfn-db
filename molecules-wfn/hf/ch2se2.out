#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/hf/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = scf.RHF(mol) 
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Wed Jun 27 22:28:06 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 5
[INPUT] num. electrons = 76
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C      0.071890000000   0.614733000000  -0.000410000000 AA    0.135852411095   1.161677009732  -0.000774787711 Bohr
[INPUT]  2 Se    -1.506081000000  -0.383780000000  -0.000202000000 AA   -2.846080611411  -0.725239092086  -0.000381724677 Bohr
[INPUT]  3 Se     1.744607000000   0.055576000000  -0.000010000000 AA    3.296829424999   0.105023419099  -0.000018897261 Bohr
[INPUT]  4 H     -0.161093000000   1.687144000000   0.000368000000 AA   -0.304421650585   3.188240092703   0.000695419214 Bohr
[INPUT]  5 H     -0.823423000000  -1.693174000000   0.000255000000 AA   -1.556043954668  -3.199635141234   0.000481880162 Bohr

nuclear repulsion = 342.269206055054
number of shells = 59
number of NR pGTOs = 362
number of NR cGTOs = 210
basis = aug-cc-pvtz
ecp = {}
CPU time:     91021.60


******** <class 'pyscf.scf.hf.RHF'> flags ********
method = RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = ch2se2.chk
max_memory 10000 MB (current use 165 MB)
Set gradient conv threshold to 3.16228e-05
init E= -4837.37022521966
  HOMO = -0.251352289237335  LUMO = -0.0695937676430295
cycle= 1 E= -4838.71591876499  delta_E= -1.35  |g|= 0.407  |ddm|= 2.58
  HOMO = -0.300360488686808  LUMO = -0.0235079611359373
cycle= 2 E= -4838.74858679952  delta_E= -0.0327  |g|= 0.347  |ddm|= 0.534
  HOMO = -0.320262713283137  LUMO = 0.0182197131188014
cycle= 3 E= -4838.77996026337  delta_E= -0.0314  |g|= 0.0624  |ddm|= 0.261
  HOMO = -0.326527836311236  LUMO = 0.0188820683270267
cycle= 4 E= -4838.78200594337  delta_E= -0.00205  |g|= 0.0205  |ddm|= 0.0919
  HOMO = -0.325239196453775  LUMO = 0.0209210458482404
cycle= 5 E= -4838.78228607966  delta_E= -0.00028  |g|= 0.00905  |ddm|= 0.0365
  HOMO = -0.326419318723227  LUMO = 0.0210528420147712
cycle= 6 E= -4838.78234738859  delta_E= -6.13e-05  |g|= 0.00362  |ddm|= 0.0171
  HOMO = -0.326643950416369  LUMO = 0.0212845475070831
cycle= 7 E= -4838.78235963222  delta_E= -1.22e-05  |g|= 0.00148  |ddm|= 0.00943
  HOMO = -0.3268404755695  LUMO = 0.0212943688387093
cycle= 8 E= -4838.78236108185  delta_E= -1.45e-06  |g|= 0.000409  |ddm|= 0.00291
  HOMO = -0.326797498137309  LUMO = 0.0213210959767683
cycle= 9 E= -4838.78236129435  delta_E= -2.12e-07  |g|= 0.000192  |ddm|= 0.00104
  HOMO = -0.326847439939853  LUMO = 0.021298817146638
cycle= 10 E= -4838.7823613329  delta_E= -3.86e-08  |g|= 6.81e-05  |ddm|= 0.00049
  HOMO = -0.326847094987929  LUMO = 0.0212982137528294
cycle= 11 E= -4838.78236133905  delta_E= -6.15e-09  |g|= 2.91e-05  |ddm|= 0.000227
  HOMO = -0.326854727134844  LUMO = 0.0212972838231249
cycle= 12 E= -4838.78236133962  delta_E= -5.75e-10  |g|= 1.16e-05  |ddm|= 7.03e-05
  HOMO = -0.326854323438069  LUMO = 0.0212962257587657
Extra cycle  E= -4838.78236133964  delta_E= -1.82e-11  |g|= 8.01e-06  |ddm|= 1.86e-05
converged SCF energy = -4838.78236133964
Electronic spatial extent <R**2> (au): 792.6481
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): 38.3232, -35.9836, -0.0442
Nuclear Dipole moment(X, Y, Z, Debye): 36.2964, -35.9115, -0.0434
Total Dipole moment(X, Y, Z, Debye): -2.0268, 0.0721, 0.0007
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -45.9087, -40.6267, -45.6963
Total Quadrupole moments (XY, XZ, YZ): -0.4889, 0.0004, -0.0014
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): -15.6744, 8.1243, 0.0193, -13.2375
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -3.0719, 0.0087, -2.7430, 2.8859
Total Octupole moments (YYZ, XYZ): 0.0090, 0.0004
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -633.8422, -97.8901, -63.6025, -48.6875
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): -0.0116, -37.8608, -0.0010, -0.0141
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): -0.0030, -128.7246, -122.2532, -29.9863
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): -0.0075, -0.0058, -15.2928
