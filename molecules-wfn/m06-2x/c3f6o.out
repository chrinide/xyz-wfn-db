#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/m06-2x/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = dft.RKS(mol) 
    mf.grids.level = 4
    mf.xc = 'm06-2x'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Thu Jun 28 05:55:11 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 10
[INPUT] num. electrons = 80
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C     -0.003947000000   0.709225000000   0.189529000000 AA   -0.007458749014   1.340241010695   0.358157902663 Bohr
[INPUT]  2 C     -1.316295000000  -0.071175000000  -0.074337000000 AA   -2.487437049134  -0.134501256916  -0.140476570922 Bohr
[INPUT]  3 F     -1.183473000000  -0.887047000000  -1.128382000000 AA   -2.236439845817  -1.676275889617  -2.132332943889 Bohr
[INPUT]  4 F     -2.316468000000   0.771197000000  -0.302784000000 AA   -4.377490096319   1.457351118086  -0.572178834900 Bohr
[INPUT]  5 F     -1.612803000000  -0.812633000000   1.003125000000 AA   -3.047755962877  -1.535653809784   1.895631518704 Bohr
[INPUT]  6 C      1.317538000000  -0.076415000000  -0.000447000000 AA    2.489785978707  -0.144403421809  -0.000844707578 Bohr
[INPUT]  7 O     -0.011391000000   1.854364000000   0.522655000000 AA   -0.021525870285   3.504240095253   0.987674807635 Bohr
[INPUT]  8 F      1.202112000000  -1.322203000000   0.478202000000 AA    2.271662451053  -2.498601551078   0.903670812219 Bohr
[INPUT]  9 F      2.314418000000   0.536402000000   0.625571000000 AA    4.373616157764   1.013652872669   1.182157861470 Bohr
[INPUT] 10 F      1.606229000000  -0.146634000000  -1.308393000000 AA    3.035332903334  -0.277098100549  -2.472504433298 Bohr

nuclear repulsion = 626.809460644037
number of shells = 130
number of NR pGTOs = 580
number of NR cGTOs = 460
basis = aug-cc-pvtz
ecp = {}
CPU time:    170056.01


******** <class 'pyscf.dft.rks.RKS'> flags ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = c3f6o.chk
max_memory 10000 MB (current use 237 MB)
XC functionals = m06-2x
small_rho_cutoff = 1e-07
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function nwchem_prune at 0x2b19c47015f0>
grids dens level: 4
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b19c4701500>
Set gradient conv threshold to 3.16228e-05
tot grids = 289128
init E= -790.663409963335
  HOMO = -0.337178165522754  LUMO = -0.132519253350526
cycle= 1 E= -788.359953371036  delta_E=  2.3  |g|= 1.28  |ddm|= 3.29
  HOMO = -0.362352579468173  LUMO = -0.110760304606286
cycle= 2 E= -788.020768194269  delta_E= 0.339  |g|= 1.99  |ddm|=  1.7
  HOMO = -0.425766448425764  LUMO = -0.0879167333665485
cycle= 3 E= -788.649414101875  delta_E= -0.629  |g|= 0.221  |ddm|= 0.937
  HOMO = -0.401450645094753  LUMO = -0.0734810152615659
cycle= 4 E= -788.656411565725  delta_E= -0.007  |g|= 0.109  |ddm|= 0.142
  HOMO = -0.411463341098745  LUMO = -0.0739489048960349
cycle= 5 E= -788.658244393026  delta_E= -0.00183  |g|= 0.0218  |ddm|= 0.0776
  HOMO = -0.411673688577655  LUMO = -0.0727552065512692
cycle= 6 E= -788.65831685543  delta_E= -7.25e-05  |g|= 0.00452  |ddm|= 0.0165
  HOMO = -0.412116556081503  LUMO = -0.0731444622567375
cycle= 7 E= -788.658322625168  delta_E= -5.77e-06  |g|= 0.00136  |ddm|= 0.00546
  HOMO = -0.412067995927374  LUMO = -0.0729745418774801
cycle= 8 E= -788.658323080418  delta_E= -4.55e-07  |g|= 0.000487  |ddm|= 0.00155
  HOMO = -0.412127065084665  LUMO = -0.0730111553632259
cycle= 9 E= -788.658323111885  delta_E= -3.15e-08  |g|= 0.000236  |ddm|= 0.000369
  HOMO = -0.412135655833723  LUMO = -0.0730127297768723
cycle= 10 E= -788.658323119517  delta_E= -7.63e-09  |g|= 4.92e-05  |ddm|= 0.000134
  HOMO = -0.412129432774608  LUMO = -0.073004980423622
cycle= 11 E= -788.658323120009  delta_E= -4.91e-10  |g|= 1.58e-05  |ddm|= 4.66e-05
  HOMO = -0.412132637517458  LUMO = -0.0730071078407587
Extra cycle  E= -788.658323120042  delta_E= -3.34e-11  |g|= 1.86e-05  |ddm|= 2.34e-05
converged SCF energy = -788.658323120042
Electronic spatial extent <R**2> (au): 1198.2826
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): -0.0898, 7.4152, -3.8332
Nuclear Dipole moment(X, Y, Z, Debye): -0.0827, 6.9957, -3.9590
Total Dipole moment(X, Y, Z, Debye): 0.0071, -0.4195, -0.1258
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -54.0686, -55.8137, -52.2137
Total Quadrupole moments (XY, XZ, YZ): 0.0049, 0.0382, -1.1356
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): 0.1220, -17.3784, 1.0148, 0.4504
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -5.8040, -0.8171, -0.3742, -2.3351
Total Octupole moments (YYZ, XYZ): -3.4463, -0.6493
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -713.5623, -299.0000, -183.9286, 0.9819
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): -7.8438, 1.8072, -20.7069, -4.9093
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): -15.5242, -167.3675, -151.9963, -78.7262
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): -4.7539, -3.1548, -1.0457
