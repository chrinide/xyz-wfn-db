#INFO: **** input file is /home/jluis/src/git/db/s22-wfn/vv10/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../s22/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-4]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.verbose = 4
    mol.build()

    mf = dft.RKS(mol)#.density_fit() 
    #mf.with_df.auxbasis = 'aug-cc-pvtz-jkfit'
    #mf.xc = 'rpw86,pbe'
    mf.xc = 'vv10'
    mf.grids.level = 4
    mf.nlc = 'vv10'
    mf.nlcgrids.level = 2
    mf.nlcgrids.prune = dft.gen_grid.sg1_prune
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  xcdft 0 0 0\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)

#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Tue Jul  3 00:02:24 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 28
[INPUT] num. electrons = 104
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 H      0.806524000000  -0.435887000000   0.000000000000 AA    1.524109472889  -0.823707051258   0.000000000000 Bohr
[INPUT]  2 N     -0.144241000000  -0.768693000000   0.000000000000 AA   -0.272575985933  -1.452619243870   0.000000000000 Bohr
[INPUT]  3 C     -0.516112000000  -2.089322000000   0.000000000000 AA   -0.975310329602  -3.948246366029   0.000000000000 Bohr
[INPUT]  4 C     -1.889876000000  -2.181449000000   0.000000000000 AA   -3.571348049389  -4.122341164706   0.000000000000 Bohr
[INPUT]  5 C     -2.393232000000  -0.847083000000   0.000000000000 AA   -4.522553032545  -1.600754874775   0.000000000000 Bohr
[INPUT]  6 C     -1.264065000000   0.019589000000   0.000000000000 AA   -2.388736653648   0.037017845054   0.000000000000 Bohr
[INPUT]  7 C     -1.389600000000   1.411767000000   0.000000000000 AA   -2.625963422696   2.667852981699   0.000000000000 Bohr
[INPUT]  8 C     -2.672650000000   1.936645000000   0.000000000000 AA   -5.050576526819   3.659728650508   0.000000000000 Bohr
[INPUT]  9 C     -3.805451000000   1.097479000000   0.000000000000 AA   -7.191260170452   2.073934737462   0.000000000000 Bohr
[INPUT] 10 C     -3.679817000000  -0.281721000000   0.000000000000 AA   -6.953846318519  -0.532375533539   0.000000000000 Bohr
[INPUT] 11 H      0.231002000000  -2.865317000000   0.000000000000 AA    0.436530514227  -5.414664390060   0.000000000000 Bohr
[INPUT] 12 H     -2.458576000000  -3.095605000000   0.000000000000 AA   -4.646035296429  -5.849845639834   0.000000000000 Bohr
[INPUT] 13 H     -0.518873000000   2.053952000000   0.000000000000 AA   -0.980527863431   3.881406753003   0.000000000000 Bohr
[INPUT] 14 H     -2.807757000000   3.009786000000   0.000000000000 AA   -5.305891754330   5.687671233550   0.000000000000 Bohr
[INPUT] 15 H     -4.790599000000   1.543937000000   0.000000000000 AA   -9.052920082615   2.917618083583   0.000000000000 Bohr
[INPUT] 16 H     -4.558019000000  -0.914292000000   0.000000000000 AA   -8.613407580564  -1.727761477881   0.000000000000 Bohr
[INPUT] 17 C      2.511900000000   1.625015000000   0.000000000000 AA    4.746803052295   3.070833298310   0.000000000000 Bohr
[INPUT] 18 C      2.713009000000   0.957854000000  -1.208292000000 AA    5.126843983480   1.810081727319  -2.283340958503 Bohr
[INPUT] 19 C      3.117782000000  -0.376744000000  -1.208365000000 AA    5.891754096099  -0.711942979073  -2.283478908510 Bohr
[INPUT] 20 C      3.321385000000  -1.043731000000   0.000000000000 AA    6.276508004239  -1.972365737718   0.000000000000 Bohr
[INPUT] 21 C      3.117782000000  -0.376744000000   1.208365000000 AA    5.891754096099  -0.711942979073   2.283478908510 Bohr
[INPUT] 22 C      2.713009000000   0.957854000000   1.208292000000 AA    5.126843983480   1.810081727319   2.283340958503 Bohr
[INPUT] 23 H      2.202404000000   2.661136000000   0.000000000000 AA    4.161940375647   5.028818220221   0.000000000000 Bohr
[INPUT] 24 H      2.551176000000   1.473691000000  -2.144590000000 AA    4.821023935563   2.784872382236  -4.052687749481 Bohr
[INPUT] 25 H      3.270300000000  -0.895141000000  -2.144838000000 AA    6.179971345165  -1.691571332869  -4.053156401560 Bohr
[INPUT] 26 H      3.636814000000  -2.078152000000   0.000000000000 AA    6.872582425984  -3.927138125217   0.000000000000 Bohr
[INPUT] 27 H      3.270300000000  -0.895141000000   2.144838000000 AA    6.179971345165  -1.691571332869   4.053156401560 Bohr
[INPUT] 28 H      2.551176000000   1.473691000000   2.144590000000 AA    4.821023935563   2.784872382236   4.052687749481 Bohr

nuclear repulsion = 876.919188888221
number of shells = 312
number of NR pGTOs = 1195
number of NR cGTOs = 989
basis = aug-cc-pvtz
ecp = {}
CPU time:    125145.25


******** <class 'pyscf.dft.rks.RKS'> flags ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = indole_c6h6_t.chk
max_memory 64000 MB (current use 305 MB)
XC functionals = vv10
NLC functional = vv10
small_rho_cutoff = 1e-07
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function nwchem_prune at 0x2b76d4a885f0>
grids dens level: 4
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b76d4a88500>
** Following is NLC Grids **
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function sg1_prune at 0x2b76d4a88578>
grids dens level: 2
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b76d4a88500>
Set gradient conv threshold to 3.16228e-05

WARN: Singularity detected in overlap matrix (condition number = 1.01e+08). SCF may be inaccurate and hard to converge.

tot grids = 631656
tot grids = 122156
init E= -599.593558004668
  HOMO = -0.305613308777999  LUMO = -0.174147118178802
cycle= 1 E= -596.671975509528  delta_E= 2.92  |g|=  1.5  |ddm|= 20.2
  HOMO = -0.038511358703805  LUMO = -0.0125785306688661
cycle= 2 E= -595.505173191206  delta_E= 1.17  |g|= 2.51  |ddm|=  8.6
  HOMO = -0.172563661598652  LUMO = -0.0512934492876288
cycle= 3 E= -597.190912077273  delta_E= -1.69  |g|= 0.446  |ddm|= 4.61
  HOMO = -0.184979754636442  LUMO = -0.0732173147981865
cycle= 4 E= -597.214764394392  delta_E= -0.0239  |g|= 0.321  |ddm|= 0.97
  HOMO = -0.178825000509277  LUMO = -0.064530742114892
cycle= 5 E= -597.24170168377  delta_E= -0.0269  |g|= 0.0676  |ddm|= 0.436
  HOMO = -0.178243194668141  LUMO = -0.0647042877090163
cycle= 6 E= -597.242577901693  delta_E= -0.000876  |g|= 0.0355  |ddm|= 0.138
  HOMO = -0.178461826186042  LUMO = -0.0647502454304862
cycle= 7 E= -597.242893526151  delta_E= -0.000316  |g|= 0.0077  |ddm|= 0.0588
  HOMO = -0.178794889124302  LUMO = -0.0648277328571038
cycle= 8 E= -597.242905802979  delta_E= -1.23e-05  |g|= 0.00327  |ddm|= 0.0149
  HOMO = -0.178854261212581  LUMO = -0.0648730067353667
cycle= 9 E= -597.242908244189  delta_E= -2.44e-06  |g|= 0.00107  |ddm|= 0.00541
  HOMO = -0.17884444779457  LUMO = -0.0649024214857782
