#INFO: **** input file is /home/jluis/src/git/db/s22-wfn/vv10/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../kb49/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-4]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.verbose = 4
    mol.build()

    mf = dft.RKS(mol).density_fit() 
    mf.with_df.auxbasis = 'aug-cc-pvtz-jkfit'
    #mf.xc = 'rpw86,pbe'
    mf.xc = 'vv10'
    mf.grids.level = 4
    mf.nlc = 'vv10'
    mf.nlcgrids.level = 2
    mf.nlcgrids.prune = dft.gen_grid.sg1_prune
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  xcdft 0 0 0\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)

#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Mon Jul  2 16:31:31 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 25
[INPUT] num. electrons = 100
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O     -1.397621000000  -1.885837000000  -0.367306000000 AA   -2.641120915941  -3.563715445571  -0.694107743909 Bohr
[INPUT]  2 N     -1.464255000000   0.364183000000   0.019230000000 AA   -2.767040926525   0.688206129222   0.036339433375 Bohr
[INPUT]  3 C     -4.185740000000   0.369667000000   0.036096000000 AA   -7.909902228637   0.698569387290   0.068211554192 Bohr
[INPUT]  4 C     -3.483260000000   1.578311000000   0.250075000000 AA   -6.582407420652   2.982575529388   0.472573260601 Bohr
[INPUT]  5 C     -2.117950000000   1.530705000000   0.233838000000 AA   -4.002345445523   2.892613227502   0.441889777516 Bohr
[INPUT]  6 C     -2.077383000000  -0.863749000000  -0.189941000000 AA   -3.925684925827  -1.632249050367  -0.358936469826 Bohr
[INPUT]  7 C     -3.515603000000  -0.805195000000  -0.175759000000 AA   -6.643526832699  -1.521598026869  -0.332136373927 Bohr
[INPUT]  8 H     -5.267804000000   0.370743000000   0.041142000000 AA   -9.954706837888   0.700602732600   0.077747112217 Bohr
[INPUT]  9 H     -3.992033000000   2.512756000000   0.421441000000 AA   -7.543849050226   4.748420657858   0.796408067663 Bohr
[INPUT] 10 H     -1.492920000000   2.398410000000   0.388502000000 AA   -2.821209925886   4.532338034418   0.734162378846 Bohr
[INPUT] 11 H     -4.040123000000  -1.734845000000  -0.337927000000 AA   -7.634725979556  -3.278381918571  -0.638589480096 Bohr
[INPUT] 12 H     -0.426527000000   0.361213000000   0.007354000000 AA   -0.806019214732   0.682593642633   0.013897045920 Bohr
[INPUT] 13 N      1.432762000000   0.363970000000  -0.015951000000 AA    2.707527781684   0.687803617558  -0.030143021413 Bohr
[INPUT] 14 C      2.115420000000  -0.780345000000   0.168110000000 AA    3.997564438427  -1.474638332674   0.317681858801 Bohr
[INPUT] 15 C      3.523759000000  -0.801610000000   0.154503000000 AA    6.658939438971  -1.514823358713   0.291968355424 Bohr
[INPUT] 16 C      4.218590000000   0.373578000000  -0.052593000000 AA    7.971979731829   0.705960106163  -0.099386366069 Bohr
[INPUT] 17 C      3.509971000000   1.561501000000  -0.244976000000 AA    6.632883895166   2.950809233234  -0.462937547091 Bohr
[INPUT] 18 C      2.128014000000   1.495332000000  -0.217537000000 AA    4.021363649240   2.825767945298  -0.411085351960 Bohr
[INPUT] 19 H      4.045921000000  -1.736136000000   0.307688000000 AA    7.645682611626  -3.280821554998   0.581446051815 Bohr
[INPUT] 20 H      5.299943000000   0.366601000000  -0.066335000000 AA   10.015440745806   0.692775486992  -0.125354982473 Bohr
[INPUT] 21 H      4.011092000000   2.502431000000  -0.413005000000 AA    7.579865340434   4.728909235621  -0.780466338076 Bohr
[INPUT] 22 H      1.533988000000   2.389384000000  -0.367057000000 AA    2.898817198369   4.515281366418  -0.693637202104 Bohr
[INPUT] 23 N      1.388312000000  -1.908304000000   0.419815000000 AA    2.623529455447  -3.606171922412   0.793335372984 Bohr
[INPUT] 24 H      1.869471000000  -2.781277000000   0.294038000000 AA    3.532788187817  -5.255851806552   0.555651290215 Bohr
[INPUT] 25 H      0.408907000000  -1.907994000000   0.130086000000 AA    0.772722240418  -3.605586107313   0.245826912640 Bohr

nuclear repulsion = 812.288518574358
number of shells = 281
number of NR pGTOs = 1087
number of NR cGTOs = 897
basis = aug-cc-pvtz
ecp = {}
CPU time:     10613.78


******** <class 'pyscf.df.df_jk.DFHF'> flags ********
method = DFHF-RKS-RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = False
chkfile to save SCF result = pyridoxine_aminopyridine.chk
max_memory 64000 MB (current use 363 MB)
XC functionals = vv10
NLC functional = vv10
small_rho_cutoff = 1e-07
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function nwchem_prune at 0x2b730447c5f0>
grids dens level: 4
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b730447c500>
** Following is NLC Grids **
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function sg1_prune at 0x2b730447c578>
grids dens level: 2
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b730447c500>
Set gradient conv threshold to 3.16228e-05
tot grids = 571980
tot grids = 110020
******** <class 'pyscf.df.df.DF'> flags ********
auxbasis = aug-cc-pvtz-jkfit
max_memory = 64000
_cderi_to_save = /scratch-ssd/jluis/tmpy9IYxQ
init E= -630.588123095274
  HOMO = -0.29161817161287  LUMO = -0.171506730043122
cycle= 1 E= -627.91196733127  delta_E= 2.68  |g|= 1.48  |ddm|= 13.5
  HOMO = -0.0183928027594958  LUMO = -0.0157430392271721
cycle= 2 E= -624.420374726266  delta_E= 3.49  |g|= 3.55  |ddm|= 90.7
  HOMO = -0.170305664507006  LUMO = -0.062393954562738
cycle= 3 E= -627.936795945649  delta_E= -3.52  |g|= 1.33  |ddm|= 90.6
  HOMO = -0.189334032106595  LUMO = -0.0866183161933331
cycle= 4 E= -628.377422252102  delta_E= -0.441  |g|= 0.377  |ddm|= 1.61
  HOMO = -0.194560830605582  LUMO = -0.0769629226575178
cycle= 5 E= -628.396668406349  delta_E= -0.0192  |g|= 0.209  |ddm|= 0.651
  HOMO = -0.191385129114632  LUMO = -0.0730240840487667
cycle= 6 E= -628.406480559369  delta_E= -0.00981  |g|= 0.0619  |ddm|= 0.245
  HOMO = -0.193915811929944  LUMO = -0.0759944164501337
cycle= 7 E= -628.407484406814  delta_E= -0.001  |g|= 0.0244  |ddm|= 0.0898
  HOMO = -0.193982829630957  LUMO = -0.0754058656755453
cycle= 8 E= -628.407605249373  delta_E= -0.000121  |g|= 0.0105  |ddm|= 0.0302
  HOMO = -0.194268007530419  LUMO = -0.0755718474059194
cycle= 9 E= -628.407623915503  delta_E= -1.87e-05  |g|= 0.00423  |ddm|= 0.0115
  HOMO = -0.194220927950211  LUMO = -0.0757235264533605
cycle= 10 E= -628.407627779457  delta_E= -3.86e-06  |g|= 0.0016  |ddm|= 0.00526
  HOMO = -0.194210044766492  LUMO = -0.0757244937727826
cycle= 11 E= -628.407628265005  delta_E= -4.86e-07  |g|= 0.000707  |ddm|= 0.00183
  HOMO = -0.194217689383174  LUMO = -0.0757041662535622
cycle= 12 E= -628.407628369633  delta_E= -1.05e-07  |g|= 0.00014  |ddm|= 0.000757
  HOMO = -0.194215987800231  LUMO = -0.0756938159262492
cycle= 13 E= -628.407628368836  delta_E= 7.97e-10  |g|= 0.000155  |ddm|= 0.000266
  HOMO = -0.194216026927203  LUMO = -0.0756984033434597
cycle= 14 E= -628.407628374852  delta_E= -6.02e-09  |g|= 2.55e-05  |ddm|= 0.000159
  HOMO = -0.194214631328157  LUMO = -0.0756987457694229
cycle= 15 E= -628.40762837489  delta_E= -3.82e-11  |g|= 2.1e-05  |ddm|= 3.75e-05
  HOMO = -0.194217349621307  LUMO = -0.0756978997308634
