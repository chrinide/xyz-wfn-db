#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/m06-l/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = dft.RKS(mol) 
    mf.grids.level = 4
    mf.xc = 'm06-l'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)

#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Thu Jun 28 21:21:37 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 6
[INPUT] num. electrons = 46
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C     -2.752307000000   0.581927000000   0.209452000000 AA   -5.201106440723   1.099682654490   0.395806916242 Bohr
[INPUT]  2 C     -1.540217000000  -0.243128000000   0.426779000000 AA   -2.910588302399  -0.459445333213   0.806495425716 Bohr
[INPUT]  3 N     -0.594511000000  -0.885729000000   0.597025000000 AA   -1.123462968041  -1.673785230585   1.128213739518 Bohr
[INPUT]  4 F     -2.602441000000   1.781523000000   0.775608000000 AA   -4.917900745339   3.366590554614   1.465686700022 Bohr
[INPUT]  5 F     -3.819796000000  -0.013297000000   0.746691000000 AA   -7.218368291709  -0.025127688278   1.411041489678 Bohr
[INPUT]  6 F     -2.969428000000   0.750864000000  -1.096955000000 AA   -5.611405666615   1.418927316795  -2.072944520972 Bohr

nuclear repulsion = 230.967644740249
number of shells = 78
number of NR pGTOs = 348
number of NR cGTOs = 276
basis = aug-cc-pvtz
ecp = {}
CPU time:    189999.36


******** <class 'pyscf.dft.rks.RKS'> flags ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = cf3cn.chk
max_memory 10000 MB (current use 217 MB)
XC functionals = m06-l
small_rho_cutoff = 1e-07
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function nwchem_prune at 0x2b99180735f0>
grids dens level: 4
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b9918073500>
Set gradient conv threshold to 3.16228e-05
tot grids = 172632
init E= -431.463958566977
  HOMO = -0.413854371556934  LUMO = -0.0944491059265998
cycle= 1 E= -430.462072723458  delta_E=    1  |g|= 0.772  |ddm|=  3.2
  HOMO = -0.316917556883957  LUMO = -0.0478439204311314
cycle= 2 E= -430.280574933257  delta_E= 0.181  |g|= 1.31  |ddm|= 1.35
  HOMO = -0.350227578053362  LUMO = -0.0493853844078036
cycle= 3 E= -430.530744732539  delta_E= -0.25  |g|= 0.315  |ddm|= 0.732
  HOMO = -0.352554229004323  LUMO = -0.0550607736655632
cycle= 4 E= -430.550408891638  delta_E= -0.0197  |g|= 0.0869  |ddm|= 0.177
  HOMO = -0.36355838710289  LUMO = -0.0629401701577358
cycle= 5 E= -430.551912343375  delta_E= -0.0015  |g|= 0.0173  |ddm|= 0.164
  HOMO = -0.360095872263505  LUMO = -0.0604426847684763
cycle= 6 E= -430.551976743791  delta_E= -6.44e-05  |g|= 0.00509  |ddm|= 0.0235
  HOMO = -0.360257067686763  LUMO = -0.060395554655651
cycle= 7 E= -430.551981015097  delta_E= -4.27e-06  |g|= 0.00131  |ddm|= 0.0109
  HOMO = -0.36040979858197  LUMO = -0.060546544364654
cycle= 8 E= -430.551981267231  delta_E= -2.52e-07  |g|= 0.000194  |ddm|= 0.00674
  HOMO = -0.360422209006262  LUMO = -0.0605566188901698
cycle= 9 E= -430.551981276125  delta_E= -8.89e-09  |g|= 4.2e-05  |ddm|= 0.0028
  HOMO = -0.360428589248899  LUMO = -0.0605621895572245
cycle= 10 E= -430.551981276677  delta_E= -5.52e-10  |g|= 1.61e-05  |ddm|= 0.000968
  HOMO = -0.360429634391925  LUMO = -0.0605631585819549
Extra cycle  E= -430.551981276631  delta_E= 4.56e-11  |g|= 2.53e-05  |ddm|= 0.000171
converged SCF energy = -430.551981276631
Electronic spatial extent <R**2> (au): 1498.9463
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): -548.5576, 88.1139, 56.9998
Nuclear Dipole moment(X, Y, Z, Debye): -549.6868, 88.8809, 56.7962
Total Dipole moment(X, Y, Z, Debye): -1.1293, 0.7670, -0.2035
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -29.4706, -32.2223, -31.1443
Total Quadrupole moments (XY, XZ, YZ): 0.4835, -0.5360, 0.6271
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): 216.7718, -27.2268, -25.5512, 72.6624
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -10.2875, -8.1838, 72.4312, -9.1247
Total Octupole moments (YYZ, XYZ): -10.1204, -0.1305
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -1250.0372, -174.0115, -108.9967, 110.6885
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): 50.9883, 113.4844, 0.5811, 46.8089
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): 1.1093, -234.6750, -227.0751, -47.9009
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): 0.4775, 17.8272, 38.2043
