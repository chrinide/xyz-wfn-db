#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/scan/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = dft.RKS(mol) 
    mf.grids.level = 4
    mf.xc = 'scan'
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)

#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Sat Jun 30 02:44:27 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 10
[INPUT] num. electrons = 26
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 N     -5.053705000000   2.724021000000   0.091074000000 AA   -9.550118364345   5.147653647564   0.172104917069 Bohr
[INPUT]  2 C     -3.605027000000   2.687191000000   0.126317000000 AA   -6.812513701662   5.078055034396   0.238704534877 Bohr
[INPUT]  3 H     -5.425367000000   1.853954000000   0.458464000000 AA  -10.252457755253   3.503465307542   0.866371397973 Bohr
[INPUT]  4 C     -5.575810000000   2.951241000000  -1.241985000000 AA  -10.536753822611   5.577037217588  -2.347011500818 Bohr
[INPUT]  5 H     -3.262096000000   2.455098000000   1.142780000000 AA   -6.164468032039   4.639462828967   2.159541220630 Bohr
[INPUT]  6 H     -3.209687000000   3.678357000000  -0.139859000000 AA   -6.065429375577   6.951087318377  -0.264295206056 Bohr
[INPUT]  7 H     -3.156326000000   1.950817000000  -0.571673000000 AA   -5.964591699844   3.686509849146  -1.080305402808 Bohr
[INPUT]  8 H     -5.284274000000   3.956367000000  -1.580042000000 AA   -9.985830627160   7.476450078267  -2.985846645310 Bohr
[INPUT]  9 H     -6.672544000000   2.911861000000  -1.225128000000 AA  -12.609280714110   5.502619802802  -2.315156387536 Bohr
[INPUT] 10 H     -5.210635000000   2.226182000000  -1.998098000000 AA   -9.846673085073   4.206874283436  -3.775857990041 Bohr

nuclear repulsion = 84.2031745226713
number of shells = 102
number of NR pGTOs = 349
number of NR cGTOs = 299
basis = aug-cc-pvtz
ecp = {}
CPU time:    109708.44


******** <class 'pyscf.dft.rks.RKS'> flags ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = c2h6nh.chk
max_memory 10000 MB (current use 194 MB)
XC functionals = scan
small_rho_cutoff = 1e-07
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function nwchem_prune at 0x2aeb3297f5f0>
grids dens level: 4
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2aeb3297f500>
Set gradient conv threshold to 3.16228e-05
tot grids = 197712
init E= -135.015642630342
  HOMO = -0.293748425773872  LUMO = -0.00600219104816755
cycle= 1 E= -134.943243607661  delta_E= 0.0724  |g|= 0.624  |ddm|= 2.22
  HOMO = -0.0910330406103387  LUMO = 0.0345787632298254
cycle= 2 E= -134.875888031477  delta_E= 0.0674  |g|= 0.794  |ddm|= 1.21
  HOMO = -0.196801239639855  LUMO = 0.0240307983222675
cycle= 3 E= -135.03772778923  delta_E= -0.162  |g|= 0.0973  |ddm|= 0.807
  HOMO = -0.186071360925745  LUMO = 0.0245594773287639
cycle= 4 E= -135.039329204463  delta_E= -0.0016  |g|= 0.0361  |ddm|= 0.0704
  HOMO = -0.190861380313363  LUMO = 0.0244210204652448
cycle= 5 E= -135.039565979388  delta_E= -0.000237  |g|= 0.0063  |ddm|= 0.0375
  HOMO = -0.190930706592414  LUMO = 0.0245070136342112
cycle= 6 E= -135.039574828515  delta_E= -8.85e-06  |g|= 0.0014  |ddm|= 0.0186
  HOMO = -0.191175050023028  LUMO = 0.024556664750557
cycle= 7 E= -135.03957535892  delta_E= -5.3e-07  |g|= 0.000378  |ddm|= 0.00462
  HOMO = -0.191230646891214  LUMO = 0.0245979468485708
cycle= 8 E= -135.03957540094  delta_E= -4.2e-08  |g|= 0.000113  |ddm|= 0.00166
  HOMO = -0.191242004307623  LUMO = 0.0246191176266492
cycle= 9 E= -135.039575405292  delta_E= -4.35e-09  |g|= 2.32e-05  |ddm|= 0.000862
  HOMO = -0.19124267692027  LUMO = 0.0246233005012199
cycle= 10 E= -135.039575405492  delta_E= -2e-10  |g|= 8.71e-06  |ddm|= 0.00021
  HOMO = -0.191242932592789  LUMO = 0.0246243759393079
Extra cycle  E= -135.039575405509  delta_E= -1.65e-11  |g|= 6.6e-06  |ddm|= 0.000102
converged SCF energy = -135.039575405509
Electronic spatial extent <R**2> (au): 3000.0483
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): -589.4411, 346.3499, -47.4716
Nuclear Dipole moment(X, Y, Z, Debye): -589.2661, 345.5011, -47.8882
Total Dipole moment(X, Y, Z, Debye): 0.1750, -0.8489, -0.4165
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -21.9598, -25.0467, -21.1521
Total Quadrupole moments (XY, XZ, YZ): 5.5798, 2.8288, -2.5015
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): 296.2471, -188.9699, 26.5542, 125.1839
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -90.4542, -9.1274, 100.0063, -59.1552
Total Octupole moments (YYZ, XYZ): -2.4991, 14.9535
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -2870.7022, -1053.1991, -120.9723, 995.3201
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): -42.3327, 924.2585, 32.5186, -152.8760
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): 78.7121, -812.6317, -516.3161, -191.3966
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): -61.2832, 12.1833, 280.9871
