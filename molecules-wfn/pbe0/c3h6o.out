#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/pbe0/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = dft.RKS(mol) 
    mf.grids.level = 4
    mf.xc = 'pbe0'
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)

#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Fri Jun 29 20:02:11 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 10
[INPUT] num. electrons = 32
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 O     -5.408487000000   3.032724000000  -0.159418000000 AA  -10.220559178271   5.731017771395  -0.301256359326 Bohr
[INPUT]  2 C     -6.209345000000   3.196259000000   0.737678000000 AA  -11.733961462937   6.040054133176   1.394009388117 Bohr
[INPUT]  3 C     -5.784435000000   3.686919000000   2.099617000000 AA  -10.930997935349   6.967267153455   3.967701096481 Bohr
[INPUT]  4 C     -7.680198000000   2.919034000000   0.547849000000 AA  -14.513470802432   5.516174808294   1.035284567617 Bohr
[INPUT]  5 H     -7.868847000000   2.572336000000  -0.472716000000 AA  -14.869965746105   4.861010540359  -0.893303774700 Bohr
[INPUT]  6 H     -8.264529000000   3.829092000000   0.749026000000 AA  -15.617696358526   7.235935185763   1.415454000178 Bohr
[INPUT]  7 H     -8.016922000000   2.160484000000   1.269907000000 AA  -15.149786942000   4.082723056505   2.399776433668 Bohr
[INPUT]  8 H     -4.703108000000   3.853402000000   2.118506000000 AA   -8.887586054251   7.281874427851   4.003396133248 Bohr
[INPUT]  9 H     -6.064386000000   2.952386000000   2.869167000000 AA  -11.460028653647   5.579200954000   5.421939835640 Bohr
[INPUT] 10 H     -6.312124000000   4.620232000000   2.345733000000 AA  -11.928185624294   8.730973111951   4.432792931354 Bohr

nuclear repulsion = 119.460331080797
number of shells = 106
number of NR pGTOs = 382
number of NR cGTOs = 322
basis = aug-cc-pvtz
ecp = {}
CPU time:    158657.75


******** <class 'pyscf.dft.rks.RKS'> flags ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = c3h6o.chk
max_memory 10000 MB (current use 214 MB)
XC functionals = pbe0
small_rho_cutoff = 1e-07
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function nwchem_prune at 0x2ac488d175f0>
grids dens level: 4
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2ac488d17500>
Set gradient conv threshold to 3.16228e-05
tot grids = 209784
init E= -193.347176281139
  HOMO = -0.369401089783415  LUMO = -0.128966626805339
cycle= 1 E= -192.862667621208  delta_E= 0.485  |g|= 0.802  |ddm|= 2.86
  HOMO = -0.0889468283263593  LUMO = -0.0080733928309077
cycle= 2 E= -192.637226293003  delta_E= 0.225  |g|= 1.35  |ddm|= 1.51
  HOMO = -0.268712947455607  LUMO = -0.0147324945987046
cycle= 3 E= -192.981093701166  delta_E= -0.344  |g|= 0.302  |ddm|= 0.981
  HOMO = -0.264037202812449  LUMO = -0.021931385839339
cycle= 4 E= -192.999337082252  delta_E= -0.0182  |g|= 0.0556  |ddm|= 0.179
  HOMO = -0.265619184293399  LUMO = -0.0179382038750636
cycle= 5 E= -192.99987956344  delta_E= -0.000542  |g|= 0.00623  |ddm|= 0.0378
  HOMO = -0.26702565152821  LUMO = -0.0188720855458305
cycle= 6 E= -192.99988712589  delta_E= -7.56e-06  |g|= 0.00217  |ddm|= 0.00663
  HOMO = -0.266839512275925  LUMO = -0.0185720064296837
cycle= 7 E= -192.999888150611  delta_E= -1.02e-06  |g|= 0.000361  |ddm|= 0.00176
  HOMO = -0.266902309733258  LUMO = -0.0186126079303142
cycle= 8 E= -192.999888180981  delta_E= -3.04e-08  |g|= 4.08e-05  |ddm|= 0.000441
  HOMO = -0.266901753845929  LUMO = -0.0186092817352325
cycle= 9 E= -192.99988818135  delta_E= -3.7e-10  |g|= 5.8e-06  |ddm|= 5.49e-05
  HOMO = -0.266902467268931  LUMO = -0.0186088842892805
Extra cycle  E= -192.999888181352  delta_E= -2.27e-12  |g|= 4.4e-06  |ddm|= 7.3e-06
converged SCF energy = -192.999888181352
Electronic spatial extent <R**2> (au): 6118.0697
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): -970.8044, 494.6156, 131.7916
Nuclear Dipole moment(X, Y, Z, Debye): -972.8490, 495.0326, 134.0821
Total Dipole moment(X, Y, Z, Debye): -2.0446, 0.4169, 2.2905
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -0.0946, -21.5820, -22.6291
Total Quadrupole moments (XY, XZ, YZ): -8.6563, -13.6580, 7.3783
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): 248.6117, -221.4111, -64.5777, 118.7378
Total Octupole moments (XXY, XXZ, XZZ, YZZ): 9.8962, 59.8636, 144.2705, -73.7294
Total Octupole moments (YYZ, XYZ): 2.6814, -43.8754
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -4373.5132, -1507.5141, -275.3426, 737.3732
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): -81.5267, 1333.7202, -146.6625, 401.2329
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): -231.9345, -940.2175, -993.3640, -292.6517
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): 185.4898, -12.0929, 466.9512
