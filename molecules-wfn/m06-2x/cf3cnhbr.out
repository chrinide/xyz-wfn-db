#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/m06-2x/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = dft.RKS(mol) 
    mf.grids.level = 4
    mf.xc = 'm06-2x'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Thu Jun 28 06:03:57 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 7
[INPUT] num. electrons = 76
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C      1.253981000000   0.005531000000  -0.020715000000 AA    2.369680655408   0.010452075195  -0.039145676670 Bohr
[INPUT]  2 N      0.138396000000   0.842443000000  -0.293038000000 AA    0.261530536735   1.591986545557  -0.553761564090 Bohr
[INPUT]  3 H      0.168900000000   1.630038000000   0.353650000000 AA    0.319174742439   3.080325392634   0.668301643952 Bohr
[INPUT]  4 F      2.355761000000   0.760481000000  -0.171250000000 AA    4.451743104932   1.437100812935  -0.323615598832 Bohr
[INPUT]  5 F      1.300185000000  -0.511434000000   1.226636000000 AA    2.456993561268  -0.966470190791   2.318006094532 Bohr
[INPUT]  6 F      1.303566000000  -1.017144000000  -0.873886000000 AA    2.463382725295  -1.922123589245  -1.651405204092 Bohr
[INPUT]  7 Br    -1.511058000000  -0.022352000000   0.001035000000 AA   -2.855485778333  -0.042239158336   0.001955866539 Bohr

nuclear repulsion = 459.459870453955
number of shells = 88
number of NR pGTOs = 442
number of NR cGTOs = 312
basis = aug-cc-pvtz
ecp = {}
CPU time:    174834.20


******** <class 'pyscf.dft.rks.RKS'> flags ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = cf3cnhbr.chk
max_memory 10000 MB (current use 215 MB)
XC functionals = m06-2x
small_rho_cutoff = 1e-07
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function nwchem_prune at 0x2b19c47015f0>
grids dens level: 4
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b19c4701500>
Set gradient conv threshold to 3.16228e-05
tot grids = 191670
init E= -2967.14965893033
  HOMO = -0.285639922424886  LUMO = -0.0876027469668126
cycle= 1 E= -2967.11311118802  delta_E= 0.0365  |g|= 0.849  |ddm|= 2.62
  HOMO = -0.377034951421555  LUMO = -0.0903772704826403
cycle= 2 E= -2967.07254425501  delta_E= 0.0406  |g|= 1.06  |ddm|= 0.906
  HOMO = -0.349486860482305  LUMO = -0.0477808143584472
cycle= 3 E= -2967.24068682278  delta_E= -0.168  |g|= 0.0946  |ddm|= 0.455
  HOMO = -0.350756914496396  LUMO = -0.0465578826926428
cycle= 4 E= -2967.24174504528  delta_E= -0.00106  |g|= 0.0492  |ddm|= 0.0806
  HOMO = -0.349652588642356  LUMO = -0.0440748827381044
cycle= 5 E= -2967.24218219911  delta_E= -0.000437  |g|= 0.0115  |ddm|= 0.0298
  HOMO = -0.350455486983389  LUMO = -0.0448941117284201
cycle= 6 E= -2967.24220546533  delta_E= -2.33e-05  |g|= 0.00274  |ddm|= 0.0091
  HOMO = -0.350296957891799  LUMO = -0.0447823118907987
cycle= 7 E= -2967.24220715504  delta_E= -1.69e-06  |g|= 0.000745  |ddm|= 0.0028
  HOMO = -0.350277841401785  LUMO = -0.0447603572026165
cycle= 8 E= -2967.24220731176  delta_E= -1.57e-07  |g|= 0.000328  |ddm|= 0.00109
  HOMO = -0.350295874747928  LUMO = -0.0447677445462827
cycle= 9 E= -2967.24220733886  delta_E= -2.71e-08  |g|= 0.000134  |ddm|= 0.000428
  HOMO = -0.350292995375884  LUMO = -0.0447641833418813
cycle= 10 E= -2967.24220734421  delta_E= -5.35e-09  |g|= 4.85e-05  |ddm|= 0.000194
  HOMO = -0.35029098491071  LUMO = -0.0447630294437986
cycle= 11 E= -2967.24220734508  delta_E= -8.66e-10  |g|= 1.66e-05  |ddm|= 7.72e-05
  HOMO = -0.350292211641029  LUMO = -0.0447636761575394
Extra cycle  E= -2967.24220734519  delta_E= -1.11e-10  |g|= 1.24e-05  |ddm|= 2.87e-05
converged SCF energy = -2967.24220734519
Electronic spatial extent <R**2> (au): 871.4595
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): 3.0605, -1.8345, -1.5067
Nuclear Dipole moment(X, Y, Z, Debye): 1.9700, -0.6478, -0.7310
Total Dipole moment(X, Y, Z, Debye): -1.0905, 1.1867, 0.7757
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -45.3592, -43.0020, -46.8290
Total Quadrupole moments (XY, XZ, YZ): 0.9947, -0.1644, 1.7523
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): -26.0819, 1.0219, 1.2620, -5.8270
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -6.0571, 1.0158, -5.3325, -0.9597
Total Octupole moments (YYZ, XYZ): 3.8726, 0.6438
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -595.2086, -119.4012, -115.7811, 2.5593
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): -1.6882, 0.2964, 6.1038, -0.7525
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): 2.7897, -124.1006, -123.3739, -41.1558
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): 0.0832, 1.1424, 0.7919
