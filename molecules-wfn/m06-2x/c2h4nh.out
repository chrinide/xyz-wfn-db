#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/m06-2x/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = dft.RKS(mol) 
    mf.grids.level = 4
    mf.xc = 'm06-2x'
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Thu Jun 28 01:01:48 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 8
[INPUT] num. electrons = 24
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 C     -6.555992000000   4.054368000000  -1.185193000000 AA  -12.389029354840   7.661645128201  -2.239690174752 Bohr
[INPUT]  2 C     -5.317424000000   3.285694000000  -0.842853000000 AA  -10.048475048189   6.209061789127  -1.592761333268 Bohr
[INPUT]  3 N     -4.106439000000   3.644312000000  -0.989006000000 AA   -7.760045057233   6.886751592466  -1.868950475552 Bohr
[INPUT]  4 H     -7.165056000000   3.489254000000  -1.906935000000 AA  -13.539993507172   6.593734439043  -3.603584887347 Bohr
[INPUT]  5 H     -6.318006000000   5.038460000000  -1.610188000000 AA  -11.939300993359   9.521309489576  -3.042814329061 Bohr
[INPUT]  6 H     -7.176731000000   4.191670000000  -0.286818000000 AA  -13.562056059676   7.921108304556  -0.542007467596 Bohr
[INPUT]  7 H     -5.483666000000   2.286231000000  -0.411186000000 AA  -10.362626898589   4.320350447491  -0.777028926255 Bohr
[INPUT]  8 H     -4.060736000000   4.585292000000  -1.396391000000 AA   -7.673678904162   8.664946081159  -2.638796552808 Bohr

nuclear repulsion = 70.8077481881249
number of shells = 84
number of NR pGTOs = 299
number of NR cGTOs = 253
basis = aug-cc-pvtz
ecp = {}
CPU time:      8524.56


******** <class 'pyscf.dft.rks.RKS'> flags ********
method = RKS-RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = c2h4nh.chk
max_memory 10000 MB (current use 143 MB)
XC functionals = m06-2x
small_rho_cutoff = 1e-07
radial grids: 
    Treutler-Ahlrichs (JCP 102, 346 (M4)) radial grids
    
becke partition: Becke, JCP, 88, 2547 (1988)
pruning grids: <function nwchem_prune at 0x2b19c47015f0>
grids dens level: 4
symmetrized grids: 0
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x2b19c4701500>
Set gradient conv threshold to 3.16228e-05
tot grids = 165336
init E= -134.236500378531
  HOMO = -0.328048066826538  LUMO = -0.0756381009177212
cycle= 1 E= -133.900121190879  delta_E= 0.336  |g|= 0.389  |ddm|= 2.41
  HOMO = -0.268480736150761  LUMO = -0.00588030153011163
cycle= 2 E= -133.914256102029  delta_E= -0.0141  |g|= 0.326  |ddm|= 0.551
  HOMO = -0.338010724255391  LUMO = -0.00670116803078171
cycle= 3 E= -133.937139490668  delta_E= -0.0229  |g|= 0.0596  |ddm|= 0.204
  HOMO = -0.331921257149382  LUMO = -0.00648025148212365
cycle= 4 E= -133.937619414221  delta_E= -0.00048  |g|= 0.0365  |ddm|= 0.0511
  HOMO = -0.334919336753637  LUMO = -0.00590996551631746
cycle= 5 E= -133.93790268919  delta_E= -0.000283  |g|= 0.00312  |ddm|= 0.0316
  HOMO = -0.334967944289196  LUMO = -0.0059792395301795
cycle= 6 E= -133.93790602894  delta_E= -3.34e-06  |g|= 0.000904  |ddm|= 0.00539
  HOMO = -0.334978928060077  LUMO = -0.00597957396263657
cycle= 7 E= -133.937906278909  delta_E= -2.5e-07  |g|= 0.000214  |ddm|= 0.00157
  HOMO = -0.335031087424794  LUMO = -0.00597488521398578
cycle= 8 E= -133.937906295078  delta_E= -1.62e-08  |g|= 6.66e-05  |ddm|= 0.000433
  HOMO = -0.335028599475871  LUMO = -0.00597434238983054
cycle= 9 E= -133.937906296183  delta_E= -1.11e-09  |g|= 2.22e-05  |ddm|= 0.000105
  HOMO = -0.335031656209754  LUMO = -0.00597419595128628
cycle= 10 E= -133.937906296309  delta_E= -1.25e-10  |g|= 3.16e-06  |ddm|= 2.72e-05
  HOMO = -0.335031734680885  LUMO = -0.00597421432915473
Extra cycle  E= -133.93790629631  delta_E= -8.53e-13  |g|= 2.61e-06  |ddm|= 7.48e-06
converged SCF energy = -133.93790629631
Electronic spatial extent <R**2> (au): 3950.6944
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): -622.8831, 427.3405, -118.2772
Nuclear Dipole moment(X, Y, Z, Debye): -625.3280, 428.1646, -118.6528
Total Dipole moment(X, Y, Z, Debye): -2.4448, 0.8241, -0.3756
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): 3.6467, -12.0244, -18.9545
Total Quadrupole moments (XY, XZ, YZ): -11.3752, 3.5897, -3.0627
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): 148.2084, -167.3384, 59.4716, 48.4016
Total Octupole moments (XXY, XXZ, XZZ, YZZ): 17.9580, -6.0157, 100.8969, -67.6490
Total Octupole moments (YYZ, XYZ): 0.9186, 19.0829
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -2477.1425, -1369.9772, -155.9368, 567.0561
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): -158.7141, 892.4087, 119.6630, -324.5627
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): 222.2768, -494.4295, -589.3805, -273.2948
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): -37.3733, -10.5913, 368.2274
