#INFO: **** input file is /home/jluis/src/git/db/molecules-wfn/hf/run_sp.py ****
#!/usr/bin/env python

import numpy, sys, os
from pyscf import lib, gto, scf, dft
from pyscf.tools import molden
from pyscf.data import radii

def read_molecule(path):

    charge = spin = 0
    with open(path, 'r') as myfile:
        output = myfile.read()
        output = output.lstrip()
        output = output.rstrip()
        output = output.split('\n')

    try:
        int(output[0])
    except ValueError:
        try:
            charge = int(output[0].split(' ')[0])
            spin = int(output[0].split(' ')[1]) - 1
        except ValueError:
            molecule = output
        else:
            molecule = '\n'.join(output[1:])
    else:
        if int(output[0]) == len(output) - 2:
            molecule = '\n'.join(output[2:])
            try:
                charge = int(output[1].split(' ')[0])
                spin = int(output[1].split(' ')[1])-1
            except ValueError:
                pass
        else:
            print "THIS IS NOT A VALID XYZ FILE"

    return (molecule, charge, spin)

directory = '../../molecules/'
files = [i for i in os.listdir(directory) if i.endswith('.xyz')]

for filename in files:

    name = filename[:-8]
    mol = gto.Mole()
    (mol.atom, charge, spin) = read_molecule(directory+filename)
    mol.basis = 'aug-cc-pvtz'
    mol.charge = charge
    mol.spin = spin
    mol.output = name+'.out'
    mol.symmetry = 0
    mol.max_memory = 10000
    mol.verbose = 4
    mol.build()

    mf = scf.RHF(mol) 
    mf = scf.addons.remove_linear_dep_(mf)
    mf.max_cycle = 120
    mf.chkfile = name+'.chk'
    mf.kernel()

    dm = mf.make_rdm1()
    nao = mol.nao_nr()
    unit = 2.541746
    origin = ([0.0,0.0,0.0])
    charges = mol.atom_charges()
    coords  = mol.atom_coords()
    mol.set_common_orig(origin)
    r2 = mol.intor_symmetric('int1e_r2')
    r2 = numpy.einsum('ij,ji->', r2, dm)
    lib.logger.info(mf,'Electronic spatial extent <R**2> (au): %.4f', r2)

    lib.logger.info(mf,'* Multipoles in the independent field-basis, Gauge -> (0,0,0)')
    ao_dip = mol.intor_symmetric('int1e_r', comp=3)
    el_dip = numpy.einsum('xij,ji->x', ao_dip, dm)
    lib.logger.info(mf,'Electronic Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *el_dip*unit)
    nucl_dip = numpy.einsum('i,ix->x', charges, coords)
    lib.logger.info(mf,'Nuclear Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *nucl_dip*unit)
    mol_dip = (nucl_dip - el_dip) * unit
    lib.logger.info(mf,'Total Dipole moment(X, Y, Z, Debye): %.4f, %.4f, %.4f', *mol_dip)

    lib.logger.info(mf,'Quadrupole moments (Debye-Angs)')
    rr = mol.intor_symmetric('int1e_rr', comp=9).reshape(3,3,nao,nao)
    rr = -1.0*numpy.einsum('xyij,ji->xy', rr, dm)
    rr += numpy.einsum('z,zx,zy->xy', charges, coords, coords)
    rr = rr*unit*lib.param.BOHR
    lib.logger.info(mf,'Total Quadrupole moments (XX, YY, ZZ): %.4f, %.4f, %.4f', \
    rr[0,0], rr[1,1], rr[2,2])
    lib.logger.info(mf,'Total Quadrupole moments (XY, XZ, YZ): %.4f, %.4f, %.4f', \
    rr[0,1], rr[0,2], rr[1,2])
 
    lib.logger.info(mf,'Octupole moments (Debye-Angs**2)')
    rrr = mol.intor_symmetric('int1e_rrr', comp=27).reshape(3,3,3,nao,nao)
    rrr = -1.0*numpy.einsum('xyzij,ji->xyz', rrr, dm)
    rrr += numpy.einsum('z,zx,zy,zk->xyk', charges, coords, coords, coords)
    rrr = rrr*unit*lib.param.BOHR**2
    lib.logger.info(mf,'Total Octupole moments (XXX, YYY, ZZZ, XYY): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,0], rrr[1,1,1], rrr[2,2,2], rrr[0,1,1])
    lib.logger.info(mf,'Total Octupole moments (XXY, XXZ, XZZ, YZZ): %.4f, %.4f, %.4f, %.4f', \
    rrr[0,0,1], rrr[0,0,2], rrr[0,2,2], rrr[1,2,2])
    lib.logger.info(mf,'Total Octupole moments (YYZ, XYZ): %.4f, %.4f', rrr[1,1,2], rrr[0,1,2])

    lib.logger.info(mf,'Hexadecapole moments (Debye-Angs**3)')
    rrrr = mol.intor_symmetric('int1e_rrrr', comp=81).reshape(3,3,3,3,nao,nao)
    rrrr = -1.0*numpy.einsum('xyzwij,ji->xyzw', rrrr, dm)
    rrrr += numpy.einsum('z,zx,zy,zk,zw->xykw', charges, coords, coords, coords, coords)
    rrrr = rrrr*unit*lib.param.BOHR**3
    lib.logger.info(mf,'Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,0], rrrr[1,1,1,1], rrrr[2,2,2,2], rrrr[0,0,0,1])
    lib.logger.info(mf,'Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): %.4f, %.4f, %.4f, %.4f', \
    rrrr[0,0,0,2], rrrr[1,1,1,0], rrrr[1,1,1,2], rrrr[2,2,2,0])
    lib.logger.info(mf,'Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): %.4f, %.4f, %.4f, %.4f', \
    rrrr[2,2,2,1], rrrr[0,0,1,1], rrrr[0,0,2,2], rrrr[1,1,2,2])
    lib.logger.info(mf,'Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): %.4f, %.4f, %.4f', \
    rrrr[0,0,1,2], rrrr[1,1,0,2], rrrr[2,2,0,1])
     
    coeff = mf.mo_coeff[:,mf.mo_occ>0]
    occ = mf.mo_occ[mf.mo_occ>0]
    energy = mf.mo_energy[mf.mo_occ>0]
    den_file = name+'.mol'
    fspt = open(den_file,'w')
    molden.header(mol, fspt)
    molden.orbital_coeff(mol, fspt, coeff, ene=energy, occ=occ) 
    fspt.close()                    
    cmd = '/home/jluis/bin/molden2aim '+name
    os.system(cmd)
    den_file = name+'.wfn'
    fspt = open(den_file,'a')
    fspt.write('RHF\n')
    fspt.close()                    

    pmd_file = name+'.pmd'
    fspt = open(pmd_file,'w')
    fspt.write('%s.wfn\n' % (name))
    if (mol.symmetry == False):
        fspt.write('nosymmetry\n')
    fspt.write('tes\n')
    fspt.write('  epsiscp 0.220\n')
    fspt.write('  radialquad 7\n')
    fspt.write('  rmapping 2\n')
    fspt.write('  lmax 10\n')
    fspt.write('  nr 551\n')
    fspt.write('  lebedev 5810\n')
    fspt.write('  betasphere\n')
    for ia in range(mol.natm):
        symb = mol.atom_pure_symbol(ia)
        inuc = lib.parameters.NUC[symb]
        betarad = radii.COVALENT[inuc]/3.5
        fspt.write('  betaradw %d %1.3f\n' % ((ia+1),betarad))
    fspt.write('  radialquadbeta 7\n')
    fspt.write('  rmappingbeta 3\n')
    fspt.write('  lmaxbeta 8\n')
    fspt.write('  nrb 451\n')
    fspt.write('  lebedevbeta 3074\n')
    fspt.write('  dafh\n')
    fspt.write('endtes')
    fspt.close()                    

    cmd = 'rm '+name+'.mol'
    os.system(cmd)
#INFO: ******************** input file end ********************


System: ('Linux', 'silicio', '3.16.0-4-amd64', '#1 SMP Debian 3.16.51-3 (2017-12-13)', 'x86_64', '')  Threads 12
Python 2.7.14 (default, Apr  9 2018, 16:34:43) 
[GCC 7.3.0]
numpy 1.14.2  scipy 1.0.1
Date: Wed Jun 27 23:50:02 2018
PySCF version 1.5
PySCF path  /home/jluis/src/pyscf/pyscf
GIT ORIG_HEAD f2dbb26d09ae5148fbf5975669a994500ac7a4c9
GIT HEAD      ref: refs/heads/master
GIT master branch  f2dbb26d09ae5148fbf5975669a994500ac7a4c9

[ENV] PYSCF_TMPDIR /scratch-ssd/jluis
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 7
[INPUT] num. electrons = 50
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry 0 subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 P     -1.364491000000   0.886666000000  -0.169469000000 AA   -2.578514289434   1.675555903964  -0.320249996604 Bohr
[INPUT]  2 O      0.296786000000   1.177882000000  -0.253971000000 AA    0.560844257605   2.225874387055  -0.479935633582 Bohr
[INPUT]  3 O     -2.054572000000   1.929977000000  -1.017260000000 AA   -3.882578383200   3.647127956710  -1.922342797475 Bohr
[INPUT]  4 O     -1.672697000000   1.259280000000   1.448710000000 AA   -3.160939219382   2.379694314142   2.737665133919 Bohr
[INPUT]  5 H      0.687340000000   0.300634000000  -0.178992000000 AA    1.298884354459   0.568115923732  -0.338245858488 Bohr
[INPUT]  6 H     -1.694665000000   0.399201000000   1.881726000000 AA   -3.202452722886   0.754380558652   3.555946781473 Bohr
[INPUT]  7 O     -1.524300000000  -0.632990000000  -0.282054000000 AA   -2.880509531675  -1.196177739588  -0.533004812338 Bohr

nuclear repulsion = 262.004738033544
number of shells = 83
number of NR pGTOs = 357
number of NR cGTOs = 280
basis = aug-cc-pvtz
ecp = {}
CPU time:    148716.61


******** <class 'pyscf.scf.hf.RHF'> flags ********
method = RHF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 120
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = h2po4_-.chk
max_memory 10000 MB (current use 177 MB)
Set gradient conv threshold to 3.16228e-05
init E= -642.099765461236
  HOMO = -0.447128386839103  LUMO = 0.00713500693730749
cycle= 1 E= -641.463636958103  delta_E= 0.636  |g|= 1.04  |ddm|= 1.92
  HOMO = -0.135652723105125  LUMO = 0.125752260787541
cycle= 2 E= -641.581855594284  delta_E= -0.118  |g|= 0.724  |ddm|= 0.996
  HOMO = -0.24510809316514  LUMO = 0.130256242934803
cycle= 3 E= -641.666169872597  delta_E= -0.0843  |g|= 0.0635  |ddm|= 0.375
  HOMO = -0.242022841985679  LUMO = 0.13144300589626
cycle= 4 E= -641.667097425479  delta_E= -0.000928  |g|= 0.0341  |ddm|= 0.0781
  HOMO = -0.246758427808622  LUMO = 0.131459046117275
cycle= 5 E= -641.667313267863  delta_E= -0.000216  |g|= 0.00742  |ddm|= 0.0232
  HOMO = -0.246205903529793  LUMO = 0.131360964412557
cycle= 6 E= -641.667326070704  delta_E= -1.28e-05  |g|= 0.00131  |ddm|= 0.00519
  HOMO = -0.246191136048266  LUMO = 0.13137210139004
cycle= 7 E= -641.667326891047  delta_E= -8.2e-07  |g|= 0.00032  |ddm|= 0.00162
  HOMO = -0.246179801306558  LUMO = 0.131373935289797
cycle= 8 E= -641.667326955457  delta_E= -6.44e-08  |g|= 9.88e-05  |ddm|= 0.000567
  HOMO = -0.246198154052594  LUMO = 0.131374527762824
cycle= 9 E= -641.667326959699  delta_E= -4.24e-09  |g|= 4.52e-05  |ddm|= 0.00014
  HOMO = -0.246195275747864  LUMO = 0.131374823610245
cycle= 10 E= -641.667326960253  delta_E= -5.54e-10  |g|= 1.6e-05  |ddm|= 4.51e-05
  HOMO = -0.2461940126618  LUMO = 0.131374702775779
Extra cycle  E= -641.667326960306  delta_E= -5.25e-11  |g|= 1.21e-05  |ddm|= 1.5e-05
converged SCF energy = -641.667326960306
Electronic spatial extent <R**2> (au): 847.0895
* Multipoles in the independent field-basis, Gauge -> (0,0,0)
Electronic Dipole moment(X, Y, Z, Debye): -301.9256, 216.6234, -11.0599
Nuclear Dipole moment(X, Y, Z, Debye): -293.5380, 210.7310, -8.0497
Total Dipole moment(X, Y, Z, Debye): 8.3876, -5.8923, 3.0102
Quadrupole moments (Debye-Angs)
Total Quadrupole moments (XX, YY, ZZ): -54.0848, -55.5361, -41.3663
Total Quadrupole moments (XY, XZ, YZ): 8.2728, -5.9890, 1.8180
Octupole moments (Debye-Angs**2)
Total Octupole moments (XXX, YYY, ZZZ, XYY): 177.4290, -127.9413, 11.9927, 76.6231
Total Octupole moments (XXY, XXZ, XZZ, YZZ): -57.4179, 15.3373, 55.1648, -47.1876
Total Octupole moments (YYZ, XYZ): 9.9195, -4.5702
Hexadecapole moments (Debye-Angs**3)
Total Hexadecapole moments (XXXX, YYYY, ZZZZ, XXXY): -602.5993, -411.8925, -169.4163, 184.5549
Total Hexadecapole moments (XXXZ, YYYX, YYYZ, ZZZX): -34.3918, 181.7357, 28.9396, -17.7482
Total Hexadecapole moments (ZZZY, XXYY, XXZZ, YYZZ): 7.4366, -214.8679, -135.1745, -114.6303
Total Hexadecapole moments (XXYZ, YYXZ, ZZXY): 17.4697, -18.0701, 68.8368
